{"ast":null,"code":"var _jsxFileName = \"/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/dataTable/index.js\";\nimport React from 'react';\nimport { emptyMsg } from '../../constants/emptyMessages';\n/*\n  class ExpandMinimizeButton extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        symbol: props.symbol\n      };\n    }\n  \n    onExOrMin(){\n      this.props.onClickFunction();\n      if(this.state.symbol === \"Expand\") {\n        this.setState({\n          symbol: \"Minimize\"\n        });\n      }\n      else {\n        this.setState({\n          symbol: \"Expand\"\n        })\n      }\n    }\n  \n    render () {\n      return (\n        <button className='btn btn-info btn-sm' onClick={() => this.onExOrMin()}> {this.state.symbol} </button>\n      );\n    }\n  \n  }\n  */\n\nexport class DatabaseTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.query = props.query;\n    this.field = this.props.query.toLowerCase();\n    this.field_upper = this.props.query.toUpperCase();\n    this.elements = undefined;\n    this.state = {\n      inputVal: \"\",\n      elements: [] //this is a list of all the elements gotten from the database in fetch information\n\n    };\n    setTimeout(this.init.bind(this), 200);\n  }\n\n  init() {\n    this.setSearch(this.field);\n  }\n\n  setSearch(field, event) {\n    this.props.firebase.doSearch({\n      type: this.field,\n      substr: window.document.getElementById(this.field + \"SearchInput\").value,\n      updateListBind: this.props.updateList\n    }, this.props.updateStatus);\n  }\n\n  addFiller() {\n    if (this.props.elements.length === 0) {\n      this.props.updateList(emptyMsg, this.field);\n    }\n  }\n\n  addButtonClick() {\n    const toAdd = prompt(\"Enter in a new \" + this.field);\n\n    if (toAdd == null) {\n      return;\n    }\n\n    if (toAdd === \"\") {\n      alert('Cannot add empty queries to the database');\n      this.props.updateStatus(\"Cannot add an empty field to the database\");\n      return;\n    }\n\n    if (this.query === 'User' || this.query === 'Admin') {\n      if (toAdd.slice(toAdd.length - 16, toAdd.length) !== '@sheltercare.org') {\n        alert('Emails added must have ending @sheltercare.org');\n        this.props.updateStatus('Emails added must have ending @sheltercare.org');\n        return;\n      }\n    }\n\n    this.props.firebase.doAddHelper({\n      type: this.field,\n      adding: toAdd,\n      statusFunc: this.props.updateStatus\n    }, () => {\n      this.props.updateField(\"ADD\" + this.field_upper, toAdd);\n    });\n    setTimeout(() => {\n      this.props.firebase.doSearch({\n        type: this.field,\n        substr: \"\",\n        updateListBind: this.props.updateList\n      }, this.props.updateStatus);\n    }, 180);\n  }\n\n  empytSearchAddButtonClick() {\n    const input = window.document.getElementById(this.field + \"SearchInput\");\n    const toAdd = input.value;\n\n    if (toAdd === \"\") {\n      alert('Cannot add empty queries to the database');\n      this.props.updateStatus(\"Cannot add an empty string to the database\");\n      return;\n    }\n\n    if (this.query === 'User' || this.query === 'Admin') {\n      if (toAdd.slice(toAdd.length - 16, toAdd.length) !== '@sheltercare.org') {\n        alert('Emails added must have ending @sheltercare.org');\n        this.props.updateStatus('Emails added must have ending @sheltercare.org');\n        return;\n      }\n    }\n\n    this.props.firebase.doAddHelper({\n      type: this.field,\n      adding: toAdd,\n      statusFunc: this.props.updateStatus\n    }, () => {\n      this.props.updateField(\"ADD\" + this.field_upper, toAdd);\n    });\n    input.value = \"\";\n    setTimeout(() => {\n      this.props.firebase.doSearch({\n        type: this.field,\n        substr: \"\",\n        updateListBind: this.props.updateList\n      }, this.props.updateStatus);\n    }, 180);\n  }\n\n  buildTable() {\n    var els = this.props.elements.map((item, i) => {\n      var button = \"\";\n\n      if (item !== emptyMsg) {\n        button = React.createElement(\"button\", {\n          id: \"rem-btn\",\n          className: \"btn btn-danger btn-sm\",\n          onClick: () => {\n            this.props.firebase.doDeleteHelper({\n              type: this.field,\n              deleting: item,\n              statusFunc: this.props.updateStatus\n            }, () => {\n              this.props.updateField(\"DELETE\" + this.field_upper, item);\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, \"-\");\n      } else {\n        button = React.createElement(\"button\", {\n          id: \"addnew-btn\",\n          className: \"btn btn-success btn-sm\",\n          onClick: () => {\n            this.addButtonClick();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Add\");\n      }\n\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \" \", item, \" \"), React.createElement(\"td\", {\n        id: \"add-btn-td\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, button));\n    });\n    return React.createElement(\"div\", {\n      className: \"tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      id: this.field + \"SearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(this.field, event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      id: \"add-btn-td\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"add-btn\",\n      className: \"btn btn-success btn-sm\",\n      onClick: () => {\n        this.addButtonClick();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"+\")))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, els)));\n  }\n\n  render() {\n    //console.log(this.props.elements);\n    setTimeout(this.addFiller.bind(this), 1); //this.addFiller();\n\n    return this.buildTable();\n  }\n\n}\nexport default DatabaseTable;","map":{"version":3,"sources":["/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/dataTable/index.js"],"names":["React","emptyMsg","DatabaseTable","Component","constructor","props","query","field","toLowerCase","field_upper","toUpperCase","elements","undefined","state","inputVal","setTimeout","init","bind","setSearch","event","firebase","doSearch","type","substr","window","document","getElementById","value","updateListBind","updateList","updateStatus","addFiller","length","addButtonClick","toAdd","prompt","alert","slice","doAddHelper","adding","statusFunc","updateField","empytSearchAddButtonClick","input","buildTable","els","map","item","i","button","doDeleteHelper","deleting","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {emptyMsg} from '../../constants/emptyMessages';\n\n/*\n  class ExpandMinimizeButton extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        symbol: props.symbol\n      };\n    }\n  \n    onExOrMin(){\n      this.props.onClickFunction();\n      if(this.state.symbol === \"Expand\") {\n        this.setState({\n          symbol: \"Minimize\"\n        });\n      }\n      else {\n        this.setState({\n          symbol: \"Expand\"\n        })\n      }\n    }\n  \n    render () {\n      return (\n        <button className='btn btn-info btn-sm' onClick={() => this.onExOrMin()}> {this.state.symbol} </button>\n      );\n    }\n  \n  }\n  */\n\n  export class DatabaseTable extends React.Component {\n    constructor(props){\n      super(props);\n      this.query = props.query;\n      this.field = (this.props.query).toLowerCase();\n      this.field_upper = (this.props.query).toUpperCase();\n      this.elements = undefined;\n      this.state = {\n        inputVal: \"\",\n        elements: [] //this is a list of all the elements gotten from the database in fetch information\n      };\n      setTimeout(this.init.bind(this), 200);\n    }\n    init()\n    {\n        this.setSearch(this.field);\n    }\n    setSearch(field, event)\n    {\n        this.props.firebase.doSearch({type:this.field, substr:window.document.getElementById(this.field+\"SearchInput\").value, updateListBind: this.props.updateList}, this.props.updateStatus);\n    }\n    \n    addFiller()\n    {\n      if(this.props.elements.length === 0)\n      {\n        this.props.updateList(emptyMsg, this.field);\n      }\n    }\n    addButtonClick()\n    {\n      const toAdd = prompt(\"Enter in a new \" + this.field);\n      if(toAdd == null){\n        return ;\n      }\n      if(toAdd === \"\")\n      {\n        alert('Cannot add empty queries to the database');\n        this.props.updateStatus(\"Cannot add an empty field to the database\");\n        return ;\n      }\n      if (this.query === 'User' || this.query=== 'Admin' ){\n        if (toAdd.slice(toAdd.length-16, toAdd.length) !== '@sheltercare.org'){\n          alert('Emails added must have ending @sheltercare.org');\n          this.props.updateStatus('Emails added must have ending @sheltercare.org');\n          return ;\n        }\n      }\n      this.props.firebase.doAddHelper({type: this.field, adding: toAdd, statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"ADD\"+this.field_upper, toAdd);});\n      setTimeout( ()=>{\n        this.props.firebase.doSearch({type:this.field, substr: \"\", updateListBind: this.props.updateList}, this.props.updateStatus);\n      },180);\n    }\n    empytSearchAddButtonClick()\n    {\n      const input = window.document.getElementById(this.field+\"SearchInput\");\n      const toAdd = input.value;\n      if(toAdd === \"\")\n      {\n        alert('Cannot add empty queries to the database');\n        this.props.updateStatus(\"Cannot add an empty string to the database\");\n        return ;\n      }\n      if (this.query === 'User' || this.query=== 'Admin' ){\n        if (toAdd.slice(toAdd.length-16, toAdd.length) !== '@sheltercare.org'){\n          alert('Emails added must have ending @sheltercare.org');\n          this.props.updateStatus('Emails added must have ending @sheltercare.org');\n          return ;\n        }\n      }\n      this.props.firebase.doAddHelper({type: this.field, adding: toAdd, statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"ADD\"+this.field_upper, toAdd);});\n      input.value = \"\";\n      setTimeout( ()=>{\n        this.props.firebase.doSearch({type:this.field, substr: \"\", updateListBind: this.props.updateList}, this.props.updateStatus);\n      },180);\n    }\n    buildTable()\n    {\n      var els = this.props.elements.map( (item, i) => {\n        var button = \"\";\n        if(item !== emptyMsg)\n        {\n          button = <button id='rem-btn' className='btn btn-danger btn-sm' onClick={() => {this.props.firebase.doDeleteHelper({type: this.field, deleting: item, statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"DELETE\"+this.field_upper, item);})}}>-</button>  \n        }\n        else \n        {\n          button = <button id='addnew-btn' className='btn btn-success btn-sm' onClick={()=>{\n              this.addButtonClick();\n            }\n          }>Add</button> \n        }\n        return (\n          <tr key={i}>\n            <td key={i}> {item} </td>\n            <td id='add-btn-td'>{button}</td>\n          </tr>\n        );} \n        ) \n  \n      return (\n        <div className='tables'>\n          <table className='table'>\n            <thead>\n              <tr>\n                <td>\n                  <input className='form-control' id={this.field+\"SearchInput\"} type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(this.field,event)}}></input>\n                </td>\n                <td id='add-btn-td'>\n                  <button id='add-btn' className='btn btn-success btn-sm' onClick={()=>{\n                      this.addButtonClick();\n                    }\n                    }>+</button> \n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {els}\n              \n            </tbody>\n          </table>\n          \n        </div>\n      )\n    }\n  \n    render () {\n      //console.log(this.props.elements);\n      setTimeout(this.addFiller.bind(this), 1);\n      //this.addFiller();\n      return (\n        this.buildTable()\n      );\n    }\n  }\n  \nexport default DatabaseTable;"]},"metadata":{},"sourceType":"module"}