{"ast":null,"code":"// Initialize Firebase \nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nconst config = {\n  apiKey: \"AIzaSyDWT1HRjJ-p0jH5pjQPtWLSVuZ2xxyWIDU\",\n  authDomain: \"hfac-sc.firebaseapp.com\",\n  databaseURL: \"https://hfac-sc.firebaseio.com\",\n  projectId: \"hfac-sc\",\n  storageBucket: \"hfac-sc.appspot.com\",\n  messagingSenderId: \"432119133740\"\n};\n\nfunction parseString(inStr) {\n  var ret = inStr.replace(/\\./g, \"\");\n  ret = ret.replace(/#/g, \"\");\n  ret = ret.replace(/\\$/g, \"\");\n  ret = ret.replace(/\\[/g, \"\");\n  ret = ret.replace(/\\]/g, \"\");\n  return ret;\n}\n\nfunction findAdmin(toFind, func) {\n  // function that finds user in the database, returning an object isAdmin\n  // isAdmin is a bool that states if this account is a verified admin able to view the page\n  var db = firebase.database().ref();\n  const query = '/admins/' + parseString(toFind.email);\n  console.log(\"database query: \" + query);\n  db.child(query).once('value').then(function (snapshot) {\n    if (snapshot.exists()) {\n      func(toFind, true);\n    } else {\n      alert(\"Signed in email is not an admin, contact system admin if this is incorrect\");\n      firebase.auth().signOut();\n    }\n  });\n  return;\n}\n\nfunction doAddHelper(refs, reduxBind = () => {}) {\n  //Attemps to add an object to the database\n  //recieves an object with attributes type, adding, statusFunc, then adds these to the\n  //    database to the corresponding values\n  var db = firebase.database().ref();\n  const parsedStr = parseString(refs.adding);\n  const query = '/' + refs.type + 's/' + parsedStr;\n  db.child(query).once('value').then(function (snapshot) {\n    if (snapshot.exists()) {\n      refs.statusFunc(\"Failed to add \" + refs.type + \" \" + refs.adding + \"\\n REASON: \" + refs.type + \" already exists in database\");\n    } else {\n      var updates = {};\n      updates[query] = true;\n      db.update(updates);\n      refs.statusFunc(\"Successfully added \" + refs.type + \" \" + refs.adding);\n      return;\n    }\n  }).catch(function (error) {\n    alert(\"An error occurred: \", error);\n    refs.statusFunc(\"Failed to add \" + refs.type + \" \" + refs.adding + \" REASON: \" + error);\n  });\n}\n\nfunction doDeleteHelper(refs) {\n  //Attemps to delete an user to the database\n  var db = firebase.database().ref();\n  const parsedStr = parseString(refs.deleting);\n  const query = '/' + refs.type + 's/' + parsedStr;\n  db.child(query).once('value').then(function (snapshot) {\n    if (snapshot.exists()) {\n      var confirmStr = \"are you sure you want to delete the \" + refs.type + \" \" + refs.deleting + \"?\";\n\n      if (window.confirm(confirmStr)) {\n        db.child(query).remove();\n        refs.statusFunc(\"Successfully deleted \" + refs.type + \" \" + refs.deleting);\n      } else {\n        refs.statusFunc(\"Deletion of \" + refs.type + \" \" + refs.deleting + \" aborted by user\");\n      }\n\n      return;\n    } else {\n      alert(\"This \" + refs.type + \" does not exist in the database\");\n      refs.statusFunc(refs.type + \" \" + refs.deleting + \" does not exist in database\");\n    }\n  }).catch(function (error) {\n    alert(\"An error occurred: \", error);\n    refs.statusFunc(\"Failed to delete \" + refs.type + \" \" + refs.deleting + \"/n REASON: \" + error);\n  });\n}\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    console.log(\"firebase intialized\");\n  }\n\n  doSignIn(cleanUpFunc) {\n    //signs in user if a user is not signed in already\n    var a = firebase.auth();\n\n    if (a.currentUser == null) {\n      console.log(\"signing in\");\n      var provider = new firebase.auth.GoogleAuthProvider();\n      var user = a.signInWithPopup(provider);\n      user.then(function (result) {\n        findAdmin({\n          email: result.user.email,\n          name: result.user.displayName\n        }, cleanUpFunc);\n      }) //error code that warns user of potential mishaps\n      .catch(function (error) {\n        var errorCode = error.code;\n\n        if (errorCode === \"auth/popup-closed-by-user\") {\n          console.log(\"Sign in window closed by user before finalizing authentication\");\n        } else {\n          alert(error);\n        }\n      });\n    } else {\n      console.log(\"user already signed in\");\n    }\n  }\n\n  doSignOut(cleanUpFunc) {\n    var a = firebase.auth();\n\n    if (a.currentUser != null) {\n      a.signOut();\n      cleanUpFunc();\n      console.log(\"signed out\");\n    }\n  }\n\n  doSearch(inObj, statusBind) // searches the database for inObj.type value for all items that contain .substr\n  //    when a match is found, inObj.updateListBind(match) is called\n  // Sets the status log by calling statusBind\n  {\n    var db = firebase.database().ref();\n    var path = \"/\" + parseString(inObj.type) + \"s/\";\n    console.log(\"searching objects at \" + path);\n    db.child(path).once('value').then(function (snapshot) {\n      if (!snapshot.exists()) {\n        statusBind(\"Could not search \" + inObj.type + \"s as they do not exist in the database\");\n        return;\n      }\n\n      inObj.updateListBind(\"\", \"\", true);\n      snapshot.forEach(function (secondSnap) {\n        const subString = inObj.substr.toLowerCase();\n        const entry = (\"\" + secondSnap.key).toLowerCase();\n\n        if (entry.includes(subString)) {\n          inObj.updateListBind(secondSnap.key, inObj.type);\n        }\n      });\n    });\n  }\n\n  doAddAdmin(adminToAdd, statusBind) {\n    //Attemps to add an admin to the database\n    var obj = {\n      type: \"admin\",\n      adding: adminToAdd,\n      statusFunc: statusBind\n    };\n    doAddHelper(obj);\n  }\n\n  doDeleteAdmin(adminToDel, statusBind) {\n    //Attemps to delete an admin to the database\n    var obj = {\n      type: \"admin\",\n      deleting: adminToDel,\n      statusFunc: statusBind\n    };\n    doDeleteHelper(obj);\n  }\n\n  doAddUser(userToAdd, statusBind) {\n    var obj = {\n      type: \"user\",\n      adding: userToAdd,\n      statusFunc: statusBind\n    };\n    doAddHelper(obj);\n  }\n\n  doDeleteUser(userToDel, statusBind) {\n    var obj = {\n      type: \"user\",\n      deleting: userToDel,\n      statusFunc: statusBind\n    };\n    doDeleteHelper(obj);\n  }\n\n  doAddResponse(responseToAdd, statusBind) {\n    var obj = {\n      type: \"response\",\n      adding: responseToAdd,\n      statusFunc: statusBind\n    };\n    doAddHelper(obj);\n  }\n\n  doDeleteResponse(responseToDel, statusBind) {\n    var obj = {\n      type: \"response\",\n      deleting: responseToDel,\n      statusFunc: statusBind\n    };\n    doDeleteHelper(obj);\n  }\n\n  doAddIssue(issueToAdd, statusBind) {\n    var obj = {\n      type: \"issue\",\n      adding: issueToAdd,\n      statusFunc: statusBind\n    };\n    doAddHelper(obj);\n  }\n\n  doDeleteIssue(issueToDel, statusBind) {\n    var obj = {\n      type: \"issue\",\n      deleting: issueToDel,\n      statusFunc: statusBind\n    };\n    doDeleteHelper(obj);\n  }\n\n  doAddProgram(programToAdd, statusBind) {\n    var obj = {\n      type: \"program\",\n      adding: programToAdd,\n      statusFunc: statusBind\n    };\n    doAddHelper(obj);\n  }\n\n  doDeleteProgram(programToDel, statusBind) {\n    var obj = {\n      type: \"program\",\n      deleting: programToDel,\n      statusFunc: statusBind\n    };\n    doDeleteHelper(obj);\n  }\n\n  checkStatus(signInFunc) {\n    var a = firebase.auth();\n\n    if (a.currentUser != null) {\n      console.log(\"CheckStatus says: user signed in\");\n      signInFunc({\n        email: a.currentUser.email,\n        name: a.currentUser.displayName\n      }, true);\n    } else {\n      console.log(\"CheckStatus says: no user signed in\");\n    }\n  }\n\n  test() {\n    console.log(\"working\");\n  }\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/Users/dloyd/summer_sc/shelter-care/src/components/firebase/app.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","parseString","inStr","ret","replace","findAdmin","toFind","func","db","database","ref","query","email","console","log","child","once","then","snapshot","exists","alert","auth","signOut","doAddHelper","refs","reduxBind","parsedStr","adding","type","statusFunc","updates","update","catch","error","doDeleteHelper","deleting","confirmStr","window","confirm","remove","Firebase","constructor","initializeApp","doSignIn","cleanUpFunc","a","currentUser","provider","GoogleAuthProvider","user","signInWithPopup","result","name","displayName","errorCode","code","doSignOut","doSearch","inObj","statusBind","path","updateListBind","forEach","secondSnap","subString","substr","toLowerCase","entry","key","includes","doAddAdmin","adminToAdd","obj","doDeleteAdmin","adminToDel","doAddUser","userToAdd","doDeleteUser","userToDel","doAddResponse","responseToAdd","doDeleteResponse","responseToDel","doAddIssue","issueToAdd","doDeleteIssue","issueToDel","doAddProgram","programToAdd","doDeleteProgram","programToDel","checkStatus","signInFunc","test"],"mappings":"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","sourcesContent":["// Initialize Firebase \nimport firebase from 'firebase/app'; \nimport 'firebase/auth';\nimport 'firebase/database';\n  const config = {\n    apiKey: \"AIzaSyDWT1HRjJ-p0jH5pjQPtWLSVuZ2xxyWIDU\",\n    authDomain: \"hfac-sc.firebaseapp.com\",\n    databaseURL: \"https://hfac-sc.firebaseio.com\",\n    projectId: \"hfac-sc\",\n    storageBucket: \"hfac-sc.appspot.com\",\n    messagingSenderId: \"432119133740\"\n  };\n  function parseString(inStr)\n  {\n    var ret = inStr.replace(/\\./g, \"\");\n    ret = ret.replace(/#/g, \"\");\n    ret = ret.replace(/\\$/g, \"\");\n    ret = ret.replace(/\\[/g, \"\");\n    ret = ret.replace(/\\]/g, \"\");\n    return ret;\n    \n  }\n  function findAdmin(toFind, func)\n    {\n      // function that finds user in the database, returning an object isAdmin\n      // isAdmin is a bool that states if this account is a verified admin able to view the page\n      var db = firebase.database().ref();\n      const query = '/admins/'+parseString(toFind.email);\n      console.log(\"database query: \"+query);\n\n      db.child(query).once('value').then(function(snapshot) {\n        if(snapshot.exists())\n        {\n          func(toFind, true);\n        }\n        else\n        {\n          alert(\"Signed in email is not an admin, contact system admin if this is incorrect\");\n          firebase.auth().signOut();  \n        }\n      });\n      return ;\n    }\n    function doAddHelper(refs, reduxBind = () => {})\n    {\n      //Attemps to add an object to the database\n      //recieves an object with attributes type, adding, statusFunc, then adds these to the\n      //    database to the corresponding values\n      var db = firebase.database().ref();\n      const parsedStr = parseString(refs.adding);\n      const query = '/'+refs.type+'s/'+parsedStr;\n\n      db.child(query).once('value').then(function(snapshot) {\n        if(snapshot.exists())\n        {\n          refs.statusFunc(\"Failed to add \"+ refs.type+\" \" + refs.adding +\"\\n REASON: \"+ refs.type+\" already exists in database\");\n        }\n        else\n        {\n          var updates = {};\n          updates[query] = true;\n          db.update(updates);\n          refs.statusFunc(\"Successfully added \"+ refs.type+\" \" + refs.adding);\n          return ;\n        }\n      })\n      .catch(function(error) {\n        alert(\"An error occurred: \", error);\n        refs.statusFunc(\"Failed to add \"+ refs.type+\" \" + refs.adding + \" REASON: \" +error);\n      });\n    }\n    function doDeleteHelper(refs)\n    {\n      //Attemps to delete an user to the database\n      var db = firebase.database().ref();\n      const parsedStr = parseString(refs.deleting);\n      const query = '/'+refs.type+'s/'+parsedStr;\n\n      db.child(query).once('value').then(function(snapshot) {\n        if(snapshot.exists())\n        {\n          var confirmStr = \"are you sure you want to delete the \"+refs.type+ \" \"+ refs.deleting + \"?\";\n          if(window.confirm(confirmStr))\n          {\n            db.child(query).remove();\n            refs.statusFunc(\"Successfully deleted \"+refs.type+ \" \"+ refs.deleting);\n          }\n          else\n          {\n            refs.statusFunc(\"Deletion of \"+refs.type+ \" \"+ refs.deleting +\" aborted by user\");\n          }\n          return ;\n        }\n        else\n        {\n          alert(\"This \"+refs.type+ \" does not exist in the database\");\n          refs.statusFunc(refs.type+ \" \" + refs.deleting +\" does not exist in database\");\n        }\n      })\n      .catch(function(error) {\n        alert(\"An error occurred: \", error);\n        refs.statusFunc(\"Failed to delete \"+refs.type+ \" \"+ refs.deleting+\"/n REASON: \" +error);\n      });\n    }\n  \n  class Firebase{\n    constructor(){\n      firebase.initializeApp(config);\n      console.log(\"firebase intialized\");\n    }\n    doSignIn(cleanUpFunc) {\n      //signs in user if a user is not signed in already\n      var a = firebase.auth();\n      if(a.currentUser == null)\n      {\n        console.log(\"signing in\");\n        var provider = new firebase.auth.GoogleAuthProvider();\n        var user = a.signInWithPopup(provider);\n\n        user.then(function(result)\n        {\n          findAdmin({email:result.user.email, name:result.user.displayName}, cleanUpFunc)\n        })\n        //error code that warns user of potential mishaps\n        .catch(function(error)\n        {\n         var errorCode = error.code;\n         if (errorCode === \"auth/popup-closed-by-user\")\n          {\n            console.log(\"Sign in window closed by user before finalizing authentication\");\n          }\n          else\n          {\n            alert(error);\n          }\n        });\n      }\n      else\n      {\n        console.log(\"user already signed in\");\n      }\n    }\n    doSignOut(cleanUpFunc){\n      var a = firebase.auth();\n      if(a.currentUser != null)\n      {\n        a.signOut();\n        cleanUpFunc();\n        console.log(\"signed out\");\n      }\n    }\n    doSearch(inObj, statusBind)\n    // searches the database for inObj.type value for all items that contain .substr\n    //    when a match is found, inObj.updateListBind(match) is called\n    // Sets the status log by calling statusBind\n    {\n      var db = firebase.database().ref();\n      var path = \"/\"+parseString(inObj.type)+\"s/\";\n      console.log(\"searching objects at \" + path);\n      db.child(path).once('value').then(function(snapshot){\n        if(!snapshot.exists())\n        {\n          statusBind(\"Could not search \" + inObj.type + \"s as they do not exist in the database\");\n          return ;\n        }\n        inObj.updateListBind(\"\", \"\",true);\n        snapshot.forEach(function(secondSnap){\n          const subString = inObj.substr.toLowerCase();\n          const entry = (\"\" + secondSnap.key).toLowerCase();\n          if(entry.includes(subString))\n          {\n            inObj.updateListBind(secondSnap.key, inObj.type);\n          }\n        });\n        \n      });\n    }\n    doAddAdmin(adminToAdd, statusBind)\n    {\n      //Attemps to add an admin to the database\n      var obj = {\n        type: \"admin\",\n        adding: adminToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteAdmin(adminToDel, statusBind)\n    {\n      //Attemps to delete an admin to the database\n      var obj = {\n        type: \"admin\",\n        deleting: adminToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    doAddUser(userToAdd, statusBind)\n    {\n      var obj = {\n        type: \"user\",\n        adding: userToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteUser(userToDel, statusBind)\n    {\n      var obj = {\n        type: \"user\",\n        deleting: userToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    doAddResponse(responseToAdd, statusBind)\n    {\n      var obj = {\n        type: \"response\",\n        adding: responseToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteResponse(responseToDel, statusBind)\n    {\n      var obj = {\n        type: \"response\",\n        deleting: responseToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    doAddIssue(issueToAdd, statusBind)\n    {\n      var obj = {\n        type: \"issue\",\n        adding: issueToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteIssue(issueToDel, statusBind)\n    {\n      var obj = {\n        type: \"issue\",\n        deleting: issueToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    doAddProgram(programToAdd, statusBind)\n    {\n      var obj = {\n        type: \"program\",\n        adding: programToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteProgram(programToDel, statusBind)\n    {\n      var obj = {\n        type: \"program\",\n        deleting: programToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    checkStatus(signInFunc){\n      var a = firebase.auth();\n      if(a.currentUser != null)\n      {\n        console.log(\"CheckStatus says: user signed in\");\n        signInFunc({email: a.currentUser.email, name:a.currentUser.displayName},true)\n      }\n      else\n      {\n        console.log(\"CheckStatus says: no user signed in\");\n      }\n    }\n    test()\n    {\n      console.log(\"working\");\n    }\n  }\n\n  export default Firebase;\n"]},"metadata":{},"sourceType":"module"}