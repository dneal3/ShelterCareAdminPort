{"ast":null,"code":"var _jsxFileName = \"/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/dataTable/index.js\";\nimport React from 'react';\nimport './App.css';\n\nclass CreateTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userinfo: undefined,\n      admininfo: undefined,\n      responseinfo: undefined,\n      programinfo: undefined,\n      issuesinfo: undefined,\n      addressinfo: undefined\n    };\n    this.startcategories = props.categories;\n  }\n\n  getDBTable(q) {\n    // i am 100% sure there is a better way to do this\n    var infostem = q + 'info';\n    var newinfo = React.createElement(DatabaseTable, {\n      query: q,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    });\n\n    switch (infostem) {\n      case 'Usersinfo':\n        if (this.state.userinfo !== undefined) {\n          this.setState({\n            userinfo: undefined\n          });\n        } else {\n          this.setState({\n            userinfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Adminsinfo':\n        if (this.state.admininfo !== undefined) {\n          this.setState({\n            admininfo: undefined\n          });\n        } else {\n          this.setState({\n            admininfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Responsesinfo':\n        if (this.state.responseinfo !== undefined) {\n          this.setState({\n            responseinfo: undefined\n          });\n        } else {\n          this.setState({\n            responseinfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Programsinfo':\n        if (this.state.programinfo !== undefined) {\n          this.setState({\n            programinfo: undefined\n          });\n        } else {\n          this.setState({\n            programinfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Common Issuesinfo':\n        if (this.state.issuesinfo !== undefined) {\n          this.setState({\n            issuesinfo: undefined\n          });\n        } else {\n          this.setState({\n            issuesinfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Addressesinfo':\n        if (this.state.addressesinfo !== undefined) {\n          this.setState({\n            addressesinfo: undefined\n          });\n        } else {\n          this.setState({\n            addressesinfo: newinfo\n          });\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  stateHelper(item) {\n    switch (item) {\n      case 'Users':\n        return this.state.userinfo;\n\n      case 'Admins':\n        return this.state.admininfo;\n\n      case 'Responses':\n        return this.state.responseinfo;\n\n      case 'Programs':\n        return this.state.programinfo;\n\n      case 'Common Issues':\n        return this.state.issuesinfo;\n\n      case 'Addresses':\n        return this.state.addressesinfo;\n\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, this.startcategories.map(item => {\n      return React.createElement(\"div\", {\n        key: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" \", item, \" \"), \" \", React.createElement(ExpandMinimizeButton, {\n        onClickFunction: () => this.getDBTable(item),\n        symbol: \"Expand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), this.stateHelper(item));\n    }));\n  }\n\n}\n\nclass ExpandMinimizeButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      symbol: props.symbol\n    };\n  }\n\n  onExOrMin() {\n    this.props.onClickFunction();\n\n    if (this.state.symbol === \"Expand\") {\n      this.setState({\n        symbol: \"Minimize\"\n      });\n    } else {\n      this.setState({\n        symbol: \"Expand\"\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      className: \"btn btn-info btn-sm\",\n      onClick: () => this.onExOrMin(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \" \", this.state.symbol, \" \");\n  }\n\n}\n\nexport class DatabaseTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.query = props.query;\n    this.field = this.props.query.toLowerCase();\n    this.field_upper = this.props.query.toUpperCase();\n    this.elements = undefined;\n    this.state = {\n      inputVal: \"\",\n      elements: [] //this is a list of all the elements gotten from the database in fetch information\n\n    };\n  }\n\n  buildTable() {\n    var els = this.props.elements.map((item, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \" \", item, \" \"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"rem-btn\",\n        className: \"btn btn-danger btn-sm\",\n        onClick: () => {\n          this.props.firebase.doDeleteHelper({\n            type: this.field,\n            deleting: item,\n            statusFunc: this.props.updateStatus\n          }, () => {\n            this.props.updateField(\"DELETE\" + this.field_upper, item);\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"-\"), \" \"));\n    });\n    return React.createElement(\"div\", {\n      className: \"tables\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-bordered\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"add items here\",\n      id: \"add_bar_\" + this.props.query,\n      value: this.state.inputVal,\n      onChange: event => {\n        this.setState({\n          inputVal: event.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"add-btn\",\n      className: \"btn btn-success btn-sm\",\n      onClick: () => {\n        var toAdd = window.document.getElementById(\"add_bar_\" + this.props.query).value;\n        console.log(toAdd);\n\n        if (toAdd === \"\") {\n          this.props.updateStatus(\"Cannot add an empty string to the database\");\n          return;\n        }\n\n        this.props.firebase.doAddHelper({\n          type: this.field,\n          adding: toAdd,\n          statusFunc: this.props.updateStatus\n        }, () => {\n          this.props.updateField(\"ADD\" + this.field_upper, toAdd);\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"+\")))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, els)));\n  }\n\n  render() {\n    return this.buildTable();\n  }\n\n}\n\nconst AdminPortal = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 228\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 229\n  },\n  __self: this\n}, \" Admin Portal Test \"), React.createElement(CreateTables, {\n  categories: ['Users', 'Admins', 'Programs', 'Common Issues', 'Responses', 'Addresses'],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 230\n  },\n  __self: this\n}));\n\nexport default AdminPortal;","map":{"version":3,"sources":["/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/dataTable/index.js"],"names":["React","CreateTables","Component","constructor","props","state","userinfo","undefined","admininfo","responseinfo","programinfo","issuesinfo","addressinfo","startcategories","categories","getDBTable","q","infostem","newinfo","setState","addressesinfo","stateHelper","item","render","map","ExpandMinimizeButton","symbol","onExOrMin","onClickFunction","DatabaseTable","query","field","toLowerCase","field_upper","toUpperCase","elements","inputVal","buildTable","els","i","firebase","doDeleteHelper","type","deleting","statusFunc","updateStatus","updateField","event","target","value","toAdd","window","document","getElementById","console","log","doAddHelper","adding","AdminPortal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass CreateTables extends React.Component {\n    constructor(props){\n      super(props);\n      this.state = {\n        userinfo: undefined,\n        admininfo: undefined,\n        responseinfo: undefined,\n        programinfo: undefined,\n        issuesinfo: undefined,\n        addressinfo: undefined\n      };\n      this.startcategories = props.categories;\n    }\n  \n    getDBTable(q){\n      // i am 100% sure there is a better way to do this\n      var infostem = q+'info';\n      var newinfo = (<DatabaseTable query={q} />);\n      switch(infostem){\n        case 'Usersinfo':\n          if(this.state.userinfo !== undefined){\n            this.setState({\n              userinfo: undefined\n            });\n          }\n          else {\n            this.setState({\n              userinfo: newinfo\n            });\n          }\n          break;\n        case 'Adminsinfo':\n          if(this.state.admininfo !== undefined) {\n            this.setState({\n              admininfo: undefined\n            });\n          }\n          else{\n            this.setState({\n              admininfo: newinfo\n            });\n          }\n          break;\n        case 'Responsesinfo':\n          if(this.state.responseinfo !== undefined) {\n            this.setState({\n              responseinfo: undefined\n            });\n          }\n          else {\n            this.setState({\n              responseinfo: newinfo\n            });\n          }\n          break;\n        case 'Programsinfo':\n          if(this.state.programinfo !== undefined){\n            this.setState({\n              programinfo: undefined\n            });\n          }\n          else {\n            this.setState({\n              programinfo: newinfo\n            });\n          }\n          break;\n        case 'Common Issuesinfo':\n          if(this.state.issuesinfo !== undefined){\n            this.setState({\n              issuesinfo: undefined\n            });\n          }\n          else{\n            this.setState({\n              issuesinfo: newinfo\n            });\n          }\n          break;\n        case 'Addressesinfo':\n          if(this.state.addressesinfo !== undefined){\n            this.setState({\n              addressesinfo: undefined\n            });\n          }\n          else {\n            this.setState({\n              addressesinfo: newinfo\n            });\n          }\n          break;\n        default:\n          break;\n      }\n  \n    }\n  \n    stateHelper(item) {\n      switch(item){\n        case 'Users':\n          return this.state.userinfo;\n        case 'Admins':\n          return this.state.admininfo;\n        case 'Responses':\n          return this.state.responseinfo;\n        case 'Programs':\n          return this.state.programinfo;\n        case 'Common Issues':\n          return this.state.issuesinfo;\n        case 'Addresses':\n          return this.state.addressesinfo;\n        default:\n          break;\n      }\n  \n    }\n  \n    render() {\n      return (\n        <div>\n          {this.startcategories.map(item => {\n            return (\n              <div key={item}>\n                <label> {item} </label> <ExpandMinimizeButton onClickFunction={() => this.getDBTable(item) } symbol=\"Expand\" /><br /> <br />\n                {this.stateHelper(item)}\n              </div>\n            );\n          })}\n      </div> );\n    }\n  }\n  \n  class ExpandMinimizeButton extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        symbol: props.symbol\n      };\n    }\n  \n    onExOrMin(){\n      this.props.onClickFunction();\n      if(this.state.symbol === \"Expand\") {\n        this.setState({\n          symbol: \"Minimize\"\n        })\n      }\n      else {\n        this.setState({\n          symbol: \"Expand\"\n        })\n      }\n    }\n  \n    render () {\n      return (\n        <button className='btn btn-info btn-sm' onClick={() => this.onExOrMin()}> {this.state.symbol} </button>\n      );\n    }\n  \n  }\n  \n  export class DatabaseTable extends React.Component {\n    constructor(props){\n      super(props);\n      this.query = props.query;\n      this.field = (this.props.query).toLowerCase();\n      this.field_upper = (this.props.query).toUpperCase();\n      this.elements = undefined;\n      this.state = {\n        inputVal: \"\",\n        elements: [] //this is a list of all the elements gotten from the database in fetch information\n      };\n      \n    }\n  \n    buildTable()\n    {\n      var els = this.props.elements.map( (item, i) => {\n        return (\n          <tr key={i}>\n            <td key={i}> {item} </td>\n            <td><button id='rem-btn' className='btn btn-danger btn-sm' onClick={() => {this.props.firebase.doDeleteHelper({type: this.field, deleting: item, statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"DELETE\"+this.field_upper, item);})}}>-</button> </td>  \n          </tr>\n        );} \n        ) \n  \n      return (\n        <div className='tables'>\n          <table className='table table-bordered'>\n            <thead>\n              <tr>\n                <td>\n                  <input type=\"text\" className='form-control' placeholder=\"add items here\" id={\"add_bar_\"+this.props.query} value = {this.state.inputVal} onChange ={(event)=> {this.setState({inputVal: event.target.value})}}></input>\n                  <button id='add-btn' className='btn btn-success btn-sm' onClick={()=>{\n                    var toAdd = window.document.getElementById(\"add_bar_\"+this.props.query).value;\n                    console.log(toAdd);\n                    if(toAdd === \"\")\n                    {\n                      this.props.updateStatus(\"Cannot add an empty string to the database\");\n                      return ;\n                    }\n                    this.props.firebase.doAddHelper({type: this.field, adding: toAdd, statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"ADD\"+this.field_upper, toAdd);}) }\n                  }>+</button> \n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {els}\n            </tbody>\n          </table>\n          \n        </div>\n      )\n    }\n  \n    render () {\n      return (\n        this.buildTable()\n      );\n    }\n  }\n  \n  const AdminPortal = () => (\n    <div>\n      <h1> Admin Portal Test </h1>\n      <CreateTables categories={['Users', 'Admins', 'Programs', 'Common Issues', 'Responses', 'Addresses']} />\n    </div>\n  );\n  \nexport default AdminPortal;"]},"metadata":{},"sourceType":"module"}