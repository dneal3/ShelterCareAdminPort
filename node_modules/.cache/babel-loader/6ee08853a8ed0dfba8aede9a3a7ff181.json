{"ast":null,"code":"import _objectSpread from \"/Users/dloyd/summer_sc/shelter-care/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/dloyd/summer_sc/shelter-care/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/firebase';\nconst intialState = {\n  userSignedIn: false,\n  user: \"\",\n  userName: \"\"\n};\n\nconst userAuthReducer = (state = intialState, action) => {\n  //state takes in an intial state at program intialization, all other calls will have a state input\n  var newState;\n\n  switch (action.type) {\n    case \"SIGNIN\":\n      newState = _objectSpread({}, state, {\n        user: action.payload.email,\n        userName: action.payload.userName\n      });\n      newState.userSignedIn = true;\n      break;\n\n    case \"SIGNOUT\":\n      newState.userSignedIn = true;\n      newState.user = \"\";\n      newState.userName = \"\";\n      break;\n\n    default:\n      break;\n  }\n\n  return newState;\n};\n\nconst store = createStore(userAuthReducer);\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nstore.dispatch({\n  type: \"SIGNIN\",\n  payload: {\n    email: \"test\",\n    userName: \"testName\"\n  }\n});\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, React.createElement(FirebaseContext.Provider, {\n  value: new Firebase(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/dloyd/summer_sc/shelter-care/src/index.js"],"names":["React","ReactDOM","createStore","combineReducers","applyMiddleware","logger","Provider","App","serviceWorker","Firebase","FirebaseContext","intialState","userSignedIn","user","userName","userAuthReducer","state","action","newState","type","payload","email","store","subscribe","console","log","getState","dispatch","render","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,QAAP,IAAkBC,eAAlB,QAAwC,uBAAxC;AAEA,MAAMC,WAAW,GAAG;AAACC,EAAAA,YAAY,EAAE,KAAf;AAChBC,EAAAA,IAAI,EAAE,EADU;AAEhBC,EAAAA,QAAQ,EAAE;AAFM,CAApB;;AAGA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAACL,WAAP,EAAoBM,MAApB,KAA+B;AACnD;AACA,MAAIC,QAAJ;;AAEA,UAAOD,MAAM,CAACE,IAAd;AAEI,SAAK,QAAL;AACID,MAAAA,QAAQ,qBAAOF,KAAP;AACAH,QAAAA,IAAI,EAAEI,MAAM,CAACG,OAAP,CAAeC,KADrB;AAEAP,QAAAA,QAAQ,EAAEG,MAAM,CAACG,OAAP,CAAeN;AAFzB,QAAR;AAIAI,MAAAA,QAAQ,CAACN,YAAT,GAAwB,IAAxB;AACA;;AACJ,SAAK,SAAL;AACIM,MAAAA,QAAQ,CAACN,YAAT,GAAwB,IAAxB;AACAM,MAAAA,QAAQ,CAACL,IAAT,GAAgB,EAAhB;AACAK,MAAAA,QAAQ,CAACJ,QAAT,GAAoB,EAApB;AACA;;AACJ;AACI;AAfR;;AAiBA,SAAOI,QAAP;AACH,CAtBD;;AAuBA,MAAMI,KAAK,GAAGpB,WAAW,CAACa,eAAD,CAAzB;AACAO,KAAK,CAACC,SAAN,CAAgB,MAAI;AAACC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AAA8B,CAAnD;AACAJ,KAAK,CAACK,QAAN,CAAe;AAACR,EAAAA,IAAI,EAAE,QAAP;AAAiBC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAK,EAAE,MAAR;AAAgBP,IAAAA,QAAQ,EAAE;AAA1B;AAAzB,CAAf;AACAb,QAAQ,CAAC2B,MAAT,CACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,EAAA,KAAK,EAAE,IAAIb,QAAJ,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,CADJ,EAKiBoB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALjB,E,CAOA;AACA;AACA;;AACAtB,aAAa,CAACuB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport logger from \"redux-logger\"\nimport {Provider} from \"react-redux\"\n\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/firebase';\n\nconst intialState = {userSignedIn: false,\n    user: \"\",\n    userName: \"\"};\nconst userAuthReducer = (state=intialState, action) => {\n    //state takes in an intial state at program intialization, all other calls will have a state input\n    var newState;\n\n    switch(action.type)\n    {\n        case \"SIGNIN\":\n            newState = {...state,\n                    user: action.payload.email,\n                    userName: action.payload.userName\n                    };\n            newState.userSignedIn = true;\n            break;\n        case \"SIGNOUT\":\n            newState.userSignedIn = true;\n            newState.user = \"\";\n            newState.userName = \"\";\n            break;\n        default:\n            break;\n    }\n    return newState;\n};\nconst store = createStore(userAuthReducer);\nstore.subscribe(()=>{console.log(store.getState())});\nstore.dispatch({type: \"SIGNIN\", payload:{email: \"test\", userName: \"testName\"}});\nReactDOM.render(\n    <Provider store={store}>\n        <FirebaseContext.Provider value={new Firebase()}>\n            <App />\n        </FirebaseContext.Provider>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}