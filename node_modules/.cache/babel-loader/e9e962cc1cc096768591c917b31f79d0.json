{"ast":null,"code":"var _jsxFileName = \"/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/fieldBar/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { DatabaseTable } from '../dataTable';\nimport { Accordion, AccordionItem } from 'react-sanfona';\n\nclass Fields extends React.Component {\n  updateList(newElement, type, clearList = false) {\n    //updates the list, clearing it instead if clearList = true\n    //TODO: change to make dynamic\n    if (clearList) {\n      this.props.clearList(type);\n    } else {\n      this.props.updateField(\"ADD\" + type.toUpperCase(), newElement);\n    }\n  }\n\n  getField(field) {\n    //returns the react elements to render the list of the given field\n    var fieldList;\n\n    switch (field) {\n      case \"admin\":\n        fieldList = this.props.fields.adminField;\n        break;\n\n      case \"issue\":\n        fieldList = this.props.fields.issueField;\n        break;\n\n      case \"response\":\n        fieldList = this.props.fields.responseField;\n        break;\n\n      case \"program\":\n        fieldList = this.props.fields.programField;\n        break;\n\n      case \"user\":\n        fieldList = this.props.fields.userField;\n        break;\n\n      case \"address\":\n        //TODO are we supporting addresses?\n        fieldList = [];\n        break;\n\n      default:\n        //  console.log('unrecognized field ' + field + ' name in getField');\n        fieldList = []; // avoid crash by iterating over nothing\n\n        break;\n    } //const fieldItems = fieldList.map((item) => <li key ={item}>{item}</li>);\n\n\n    return fieldList;\n  }\n\n  render() {\n    // console.log(this.props.fields);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Accordion, {\n      allowMultiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, ['User', 'Admin', 'Program', 'Issue', 'Response', 'Address'].map(item => {\n      return React.createElement(AccordionItem, {\n        key: item,\n        title: \"\".concat(item),\n        expanded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(DatabaseTable, {\n        query: item,\n        firebase: this.props.firebase,\n        updateStatus: this.props.updateStatus,\n        updateField: this.props.updateField,\n        elements: this.getField(item.toLowerCase()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }));\n    })), React.createElement(\"div\", {\n      className: \"container-fluid\",\n      id: \"search-bars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Admins Search\"), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"addAdmin\",\n      onClick: () => {\n        this.props.firebase.doAddAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Add an admin\"), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"delAdmin\",\n      onClick: () => {\n        this.props.firebase.doDeleteAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Delete an admin\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Users Search\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"userSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"user\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"addUser\",\n      onClick: () => {\n        this.props.firebase.doAddUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Add an User\"), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"delUser\",\n      onClick: () => {\n        this.props.firebase.doDeleteUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Delete an User\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Issue Search\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"issueSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"issue\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"addIssue\",\n      onClick: () => {\n        this.props.firebase.doAddIssue(\"test issue\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Add an issue\"), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"delIssue\",\n      onClick: () => {\n        this.props.firebase.doDeleteIssue(\"test issue\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Delete an issue\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Response Search\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"resSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"response\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"addResponse\",\n      onClick: () => {\n        this.props.firebase.doAddHelper({\n          type: \"response\",\n          adding: \"test response\",\n          statusFunc: this.props.updateStatus\n        }, () => {\n          this.props.updateField(\"ADDRESPONSE\", \"test response\");\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Add a response\"), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"delResponse\",\n      onClick: () => {\n        this.props.firebase.doDeleteHelper({\n          type: \"response\",\n          deleting: \"test response\",\n          statusFunc: this.props.updateStatus\n        }, () => {\n          this.props.updateField(\"DELETERESPONSE\", \"test response\");\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Delete a response\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Program Search\"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"programSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"program\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"addProgram\",\n      onClick: () => {\n        this.props.firebase.doAddProgram(\"test program\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Add a program\"), React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm\",\n      id: \"delProgram\",\n      onClick: () => {\n        this.props.firebase.doDeleteProgram(\"test program\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Delete a program\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    fields: state.fieldReducer\n  };\n};\n\nconst mapDispatcherToProps = dispatch => {\n  return {\n    updateStatus: newStatus => {\n      dispatch({\n        type: \"UPDATESTATUS\",\n        payload: newStatus\n      });\n    },\n    updateField: (updateType, element) => {\n      dispatch({\n        type: updateType,\n        payload: element\n      });\n    },\n    clearList: fieldName => {\n      dispatch({\n        type: \"CLEARLIST\",\n        payload: fieldName\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatcherToProps)(Fields);","map":{"version":3,"sources":["/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/fieldBar/index.js"],"names":["React","connect","DatabaseTable","Accordion","AccordionItem","Fields","Component","updateList","newElement","type","clearList","props","updateField","toUpperCase","getField","field","fieldList","fields","adminField","issueField","responseField","programField","userField","render","map","item","firebase","updateStatus","toLowerCase","doAddAdmin","doDeleteAdmin","event","setSearch","doAddUser","doDeleteUser","doAddIssue","doDeleteIssue","doAddHelper","adding","statusFunc","doDeleteHelper","deleting","doAddProgram","doDeleteProgram","mapStateToProps","state","fieldReducer","mapDispatcherToProps","dispatch","newStatus","payload","updateType","element","fieldName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {DatabaseTable} from '../dataTable';\nimport { Accordion, AccordionItem } from 'react-sanfona';\n\n\nclass Fields extends React.Component\n{\n    \n    updateList(newElement, type, clearList=false)\n    {\n        //updates the list, clearing it instead if clearList = true\n        //TODO: change to make dynamic\n        if(clearList)\n        {\n            this.props.clearList(type);\n        }\n        else\n        {\n            this.props.updateField(\"ADD\"+type.toUpperCase(), newElement);\n        }\n    }\n    getField(field)\n    {\n        //returns the react elements to render the list of the given field\n        var fieldList;\n        switch(field)\n        {\n            \n            case \"admin\":\n                fieldList = this.props.fields.adminField;\n                break;\n            case \"issue\":\n                fieldList = this.props.fields.issueField;\n                break;\n            case \"response\":\n                fieldList = this.props.fields.responseField;\n                break;\n            case \"program\":\n                fieldList = this.props.fields.programField;\n                break;\n            case \"user\":\n                fieldList = this.props.fields.userField;\n                break;\n            case \"address\":\n                //TODO are we supporting addresses?\n                fieldList = [];\n                break;\n            default:\n              //  console.log('unrecognized field ' + field + ' name in getField');\n                fieldList = []; // avoid crash by iterating over nothing\n                break;\n        }\n        \n        //const fieldItems = fieldList.map((item) => <li key ={item}>{item}</li>);\n         return fieldList;\n    }\n    \n    render(){\n       // console.log(this.props.fields);\n        return(\n            <div>\n                <br/>\n                <hr/>\n                <Accordion allowMultiple = {true}>\n        {['User', 'Admin', 'Program', 'Issue', 'Response', 'Address'].map(item => {\n          return (\n            <AccordionItem key = {item} title={`${item}`} expanded = {true}>\n              <DatabaseTable query = {item} firebase = {this.props.firebase} updateStatus = {this.props.updateStatus} updateField = {this.props.updateField} elements = {this.getField(item.toLowerCase())}/>\n            </AccordionItem>\n\n          );\n        })}\n      </Accordion>\n            <div className='container-fluid' id='search-bars'>\n                <h4>Admins Search</h4>\n                <button className='btn btn-primary btn-sm' id=\"addAdmin\" onClick={()=>{this.props.firebase.doAddAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);}}>Add an admin</button>\n                <button className='btn btn-primary btn-sm' id=\"delAdmin\" onClick={()=>{this.props.firebase.doDeleteAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);}}>Delete an admin</button>\n                <br/>\n                \n                <hr/>\n                \n                <h4>Users Search</h4>\n                <input className='form-control' id=\"userSearchInput\" type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"user\",event)}}></input>\n                <button className='btn btn-primary btn-sm' id=\"addUser\" onClick={()=>{this.props.firebase.doAddUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);}}>Add an User</button>\n                <button className='btn btn-primary btn-sm' id=\"delUser\" onClick={()=>{this.props.firebase.doDeleteUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);}}>Delete an User</button>\n                <br/>\n                \n                <hr/>\n\n                <h4>Issue Search</h4>\n                <input className='form-control' id=\"issueSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"issue\",event)}}></input>\n                <button className='btn btn-primary btn-sm' id=\"addIssue\" onClick={()=>{this.props.firebase.doAddIssue(\"test issue\", this.props.updateStatus);}}>Add an issue</button>\n                <button className='btn btn-primary btn-sm' id=\"delIssue\" onClick={()=>{this.props.firebase.doDeleteIssue(\"test issue\", this.props.updateStatus);}}>Delete an issue</button>\n                <br/>\n                \n                <hr/>\n                \n                <h4>Response Search</h4>\n                <input className='form-control' id=\"resSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"response\",event)}}></input>\n                <button className='btn btn-primary btn-sm' id=\"addResponse\" onClick={()=>{this.props.firebase.doAddHelper({type: \"response\", adding: \"test response\", statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"ADDRESPONSE\", \"test response\")});}}>Add a response</button>\n                <button className='btn btn-primary btn-sm' id=\"delResponse\" onClick={()=>{this.props.firebase.doDeleteHelper({type: \"response\", deleting: \"test response\", statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"DELETERESPONSE\", \"test response\");});}}>Delete a response</button>\n                <br/>\n                \n                <hr/>\n                \n                <h4>Program Search</h4>\n                <input className='form-control' id=\"programSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"program\",event)}}></input>\n                <button className='btn btn-primary btn-sm' id=\"addProgram\" onClick={()=>{this.props.firebase.doAddProgram(\"test program\", this.props.updateStatus);}}>Add a program</button>\n                <button className='btn btn-primary btn-sm' id=\"delProgram\" onClick={()=>{this.props.firebase.doDeleteProgram(\"test program\", this.props.updateStatus);}}>Delete a program</button>\n                <br />\n\n                <hr/>\n            </div>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        fields: state.fieldReducer\n    }\n};\nconst mapDispatcherToProps = (dispatch) => {\n    return {\n        updateStatus: (newStatus) => {dispatch({type: \"UPDATESTATUS\", payload: newStatus})},\n        updateField: (updateType, element) => {\n            dispatch({type: updateType, payload: element});\n        },\n        clearList: (fieldName) => {dispatch({type: \"CLEARLIST\", payload: fieldName});}\n    }\n};\nexport default connect(mapStateToProps, mapDispatcherToProps)(Fields);"]},"metadata":{},"sourceType":"module"}