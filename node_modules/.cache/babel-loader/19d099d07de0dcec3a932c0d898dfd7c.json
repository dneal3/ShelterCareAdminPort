{"ast":null,"code":"import _objectSpread from \"/Users/dloyd/summer_sc/ShelterCareAdminPort/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/dloyd/summer_sc/ShelterCareAdminPort/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/firebase';\nconst initialState = {\n  userSignedIn: false,\n  email: \"\",\n  userName: \"\"\n};\n\nconst userAuthReducer = (state = initialState, action) => {\n  //state takes in an intial state at program intialization, all other calls will have a state input\n  var newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"SIGNIN\":\n      newState.email = action.payload.email;\n      newState.userName = action.payload.userName;\n      newState.userSignedIn = true;\n      newState.isAdmin = action.payload.isAdmin;\n      break;\n\n    case \"SIGNOUT\":\n      newState.userSignedIn = false;\n      newState.isAdmin = false;\n      newState.email = \"\";\n      newState.userName = \"\";\n      break;\n\n    default:\n      //console.log(\"error in userAuthReducer, unknown action type: \", action.type);\n      break;\n  }\n\n  return newState;\n};\n\nconst initialFieldState = {\n  responseField: [],\n  issueField: [],\n  userField: [],\n  adminField: [],\n  programField: [],\n  status: \"no action taken\"\n};\n\nconst fieldReducer = (state = initialFieldState, action) => {\n  var newState = _objectSpread({}, state);\n\n  var length, i, toAdd, toDelete;\n\n  switch (action.type) {\n    case \"UPDATESTATUS\":\n      newState.status = action.payload;\n      break;\n\n    case \"CLEARLIST\":\n      var emptyList = [];\n\n      switch (action.payload) {\n        case \"all\":\n          newState = initialFieldState;\n          break;\n\n        case \"admin\":\n          newState.adminField = emptyList;\n          break;\n\n        case \"issue\":\n          newState.issueField = emptyList;\n          break;\n\n        case \"program\":\n          newState.programField = emptyList;\n          break;\n\n        case \"response\":\n          newState.responseField = emptyList;\n          break;\n\n        case \"user\":\n          newState.userField = emptyList;\n          break;\n\n        default:\n          //console.log(\"unrecognized field name in reducer\");\n          break;\n      }\n\n      break;\n\n    case \"ADDADMIN\":\n      toAdd = [...state.adminField];\n      toAdd.push(action.payload);\n      toAdd.sort();\n      newState.adminField = toAdd;\n      break;\n\n    case \"DELETEADMIN\":\n      var admins = [...state.adminField];\n      i = 0;\n      length = admins.length;\n\n      for (i; i < length; i++) {\n        if (admins[i] === action.payload) {\n          break;\n        }\n      }\n\n      admins.splice(i, 1);\n      newState.adminField = admins;\n      break;\n\n    case \"ADDISSUE\":\n      var issues = [...state.issueField];\n      issues.push(action.payload);\n      issues.sort();\n      newState.issueField = issues;\n      break;\n\n    case \"DELETEISSUE\":\n      var issues = [...state.issueField];\n      i = 0;\n      length = issues.length;\n\n      for (i; i < length; i++) {\n        if (issues[i] === action.payload) {\n          break;\n        }\n      }\n\n      issues.splice(i, 1);\n      newState.issueField = issues;\n      break;\n\n    case \"ADDRESPONSE\":\n      var responses = [...state.responseField];\n      responses.push(action.payload);\n      responses.sort();\n      newState.responseField = responses;\n      break;\n\n    case \"DELETERESPONSE\":\n      var responses = [...state.responseField];\n      i = 0;\n      length = responses.length;\n\n      for (i; i < length; i++) {\n        if (responses[i] === action.payload) {\n          break;\n        }\n      }\n\n      responses.splice(i, 1);\n      newState.responseField = responses;\n      break;\n\n    case \"ADDPROGRAM\":\n      var programs = [...state.programField];\n      programs.push(action.payload);\n      programs.sort();\n      newState.programField = programs;\n      break;\n\n    case \"DELETEPROGRAM\":\n      var programs = [...state.programField];\n      i = 0;\n      length = programs.length;\n\n      for (i; i < length; i++) {\n        if (programs[i] === action.payload) {\n          break;\n        }\n      }\n\n      programs.splice(i, 1);\n      newState.programField = programs;\n      break;\n\n    case \"ADDUSER\":\n      var users = [...state.userField];\n      users.push(action.payload);\n      users.sort();\n      newState.userField = users;\n      break;\n\n    case \"DELETEUSER\":\n      var users = [...state.userField];\n      i = 0;\n      length = users.length;\n\n      for (i; i < length; i++) {\n        if (users[i] === action.payload) {\n          break;\n        }\n      }\n\n      users.splice(i, 1);\n      newState.userField = users;\n      break;\n\n    case \"ADDADDRESS\":\n      console.log(\"Addresses?\");\n      break;\n\n    case \"DELETEADDRESS\":\n      console.log(\"Addresses?\");\n      break;\n\n    default:\n      break;\n  }\n\n  return newState;\n};\n\nconst store = createStore(combineReducers({\n  userAuthReducer,\n  fieldReducer\n})); //store.subscribe(()=>{console.log(store.getState())});\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 180\n  },\n  __self: this\n}, React.createElement(FirebaseContext.Provider, {\n  value: new Firebase(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 181\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 182\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/dloyd/summer_sc/ShelterCareAdminPort/src/index.js"],"names":["React","ReactDOM","createStore","combineReducers","Provider","App","serviceWorker","Firebase","FirebaseContext","initialState","userSignedIn","email","userName","userAuthReducer","state","action","newState","type","payload","isAdmin","initialFieldState","responseField","issueField","userField","adminField","programField","status","fieldReducer","length","i","toAdd","toDelete","emptyList","push","sort","admins","splice","issues","responses","programs","users","console","log","store","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, combineReducers} from \"redux\";\nimport {Provider} from \"react-redux\"\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/firebase';\n\nconst initialState = {userSignedIn: false,\n    email: \"\",\n    userName: \"\"};\nconst userAuthReducer = (state=initialState, action) => {\n    //state takes in an intial state at program intialization, all other calls will have a state input\n    var newState = {...state};\n\n    switch(action.type)\n    {\n        case \"SIGNIN\":\n            newState.email = action.payload.email;\n            newState.userName = action.payload.userName;\n            newState.userSignedIn = true;\n            newState.isAdmin = action.payload.isAdmin;\n            break;\n        case \"SIGNOUT\":\n            newState.userSignedIn = false;\n            newState.isAdmin = false;\n            newState.email = \"\";\n            newState.userName = \"\";\n            break;\n        default:\n            //console.log(\"error in userAuthReducer, unknown action type: \", action.type);\n            break;\n    }\n    return newState;\n};\nconst initialFieldState = {responseField: [],\n                            issueField: [],\n                            userField: [],\n                            adminField: [],\n                            programField: [],\n                            status: \"no action taken\"\n                            };\nconst fieldReducer = (state=initialFieldState, action) => {\n    var newState = {...state};\n    var length, i, toAdd, toDelete;\n    switch(action.type)\n    {\n        case \"UPDATESTATUS\":\n            newState.status = action.payload;\n            break;\n        case \"CLEARLIST\":\n            var emptyList = [];\n            switch (action.payload)\n            {\n                case \"all\":\n                    newState = initialFieldState;\n                    break;\n                case \"admin\":\n                    newState.adminField = emptyList;\n                    break;\n                case \"issue\":\n                    newState.issueField = emptyList;\n                    break;\n                case \"program\":\n                    newState.programField = emptyList;\n                    break;\n                case \"response\":\n                    newState.responseField = emptyList;\n                    break;\n                case \"user\":\n                    newState.userField = emptyList;\n                    break;\n                default:\n                    //console.log(\"unrecognized field name in reducer\");\n                    break;\n            }\n            break;\n        case \"ADDADMIN\":\n            toAdd = [...state.adminField];\n            toAdd.push(action.payload);\n            toAdd.sort();\n            newState.adminField = toAdd;\n            break;\n        case \"DELETEADMIN\":\n            var admins = [...state.adminField];\n            i = 0;\n            length = admins.length;\n            for(i; i<length; i++)\n            {\n                if(admins[i] === action.payload){break;}\n            }\n            admins.splice(i, 1);\n            newState.adminField = admins;\n            break;\n        case \"ADDISSUE\":\n            var issues = [...state.issueField];\n            issues.push(action.payload);\n            issues.sort();\n            newState.issueField = issues;\n            break;\n        case \"DELETEISSUE\":\n            var issues = [...state.issueField];\n            i = 0;\n            length = issues.length;\n            for(i; i<length; i++)\n            {\n                if(issues[i] === action.payload){break;}\n            }\n            issues.splice(i, 1);\n            newState.issueField = issues;\n            break;\n        case \"ADDRESPONSE\":\n            var responses = [...state.responseField];\n            responses.push(action.payload);\n            responses.sort();\n            newState.responseField = responses;\n            break;\n        case \"DELETERESPONSE\":\n            var responses = [...state.responseField];\n            i = 0;\n            length = responses.length;\n            for(i; i<length; i++)\n            {\n               if(responses[i] === action.payload){break;}\n            }\n            responses.splice(i, 1);\n            newState.responseField = responses;\n            break;\n        case \"ADDPROGRAM\":\n            var programs = [...state.programField];\n            programs.push(action.payload);\n            programs.sort();\n            newState.programField = programs;\n            break;\n        case \"DELETEPROGRAM\":\n            var programs = [...state.programField];\n            i = 0;\n            length = programs.length;\n            for(i; i<length; i++)\n            {\n                if(programs[i] === action.payload){break;}\n            }\n            programs.splice(i, 1);\n            newState.programField = programs;\n            break;\n        case \"ADDUSER\":\n            var users = [...state.userField];\n            users.push(action.payload);\n            users.sort();\n            newState.userField = users;\n            break;\n        case \"DELETEUSER\":\n            var users = [...state.userField];\n            i = 0;\n            length = users.length;\n            for(i; i<length; i++)\n            {\n                if(users[i] === action.payload){break;}\n            }\n            users.splice(i, 1);\n            newState.userField = users;\n            break;\n        case \"ADDADDRESS\":\n            console.log(\"Addresses?\");\n            break;\n        case \"DELETEADDRESS\":\n            console.log(\"Addresses?\");\n            break;\n        default:\n            break;\n    }\n    return newState;\n};\n\nconst store = createStore(combineReducers({userAuthReducer, fieldReducer}));\n//store.subscribe(()=>{console.log(store.getState())});\n\nReactDOM.render(\n    <Provider store={store}>\n        <FirebaseContext.Provider value={new Firebase()}>\n            <App />\n        </FirebaseContext.Provider>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}