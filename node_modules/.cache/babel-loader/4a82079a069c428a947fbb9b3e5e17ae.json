{"ast":null,"code":"var _jsxFileName = \"/Users/derrickneal/Projects/my-app/src/App.js\";\nimport React from 'react';\nimport './adminport.css';\n\nclass CreateTables extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userinfo: undefined,\n      admininfo: undefined,\n      responseinfo: undefined,\n      programinfo: undefined,\n      issuesinfo: undefined,\n      addressinfo: undefined\n    };\n    this.startcategories = props.categories;\n  }\n\n  getDBTable(q) {\n    // i am 100% sure there is a better way to do this\n    var infostem = q + 'info';\n    console.log(\"I got Called\" + ' ' + infostem);\n    var newinfo = React.createElement(DatabaseTable, {\n      query: q,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    });\n\n    switch (infostem) {\n      case 'Usersinfo':\n        if (this.state.userinfo != undefined) {\n          this.setState({\n            userinfo: undefined\n          });\n        } else {\n          this.setState({\n            userinfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Adminsinfo':\n        if (this.state.admininfo != undefined) {\n          this.setState({\n            admininfo: undefined\n          });\n        } else {\n          this.setState({\n            admininfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Responsesinfo':\n        if (this.state.responseinfo != undefined) {\n          this.setState({\n            responseinfo: undefined\n          });\n        } else {\n          this.setState({\n            responseinfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Programsinfo':\n        if (this.state.programinfo != undefined) {\n          this.setState({\n            programinfo: undefined\n          });\n        } else {\n          this.setState({\n            programinfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Common Issuesinfo':\n        if (this.state.issuesinfo != undefined) {\n          this.setState({\n            issuesinfo: undefined\n          });\n        } else {\n          this.setState({\n            issuesinfo: newinfo\n          });\n        }\n\n        break;\n\n      case 'Addressesinfo':\n        if (this.state.addressesinfo != undefined) {\n          this.setState({\n            addressesinfo: undefined\n          });\n        } else {\n          this.setState({\n            addressesinfo: newinfo\n          });\n        }\n\n        break;\n    }\n  }\n\n  stateHelper(item) {\n    switch (item) {\n      case 'Users':\n        return this.state.userinfo;\n\n      case 'Admins':\n        return this.state.admininfo;\n\n      case 'Responses':\n        return this.state.responseinfo;\n\n      case 'Programs':\n        return this.state.programinfo;\n\n      case 'Common Issues':\n        return this.state.issuesinfo;\n\n      case 'Addresses':\n        return this.state.addressesinfo;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.startcategories.map(item => {\n      return React.createElement(\"div\", {\n        key: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" \", item, \" \"), \" \", React.createElement(ExpandMinimizeButton, {\n        onClickFunction: () => this.getDBTable(item),\n        symbol: \"Expand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), this.stateHelper(item));\n    }));\n  }\n\n}\n\nclass ExpandMinimizeButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      symbol: props.symbol\n    };\n  }\n\n  onExOrMin() {\n    this.props.onClickFunction();\n\n    if (this.state.symbol == \"Expand\") {\n      this.setState({\n        symbol: \"Minimize\"\n      });\n    } else {\n      this.setState({\n        symbol: \"Expand\"\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      onClick: () => this.onExOrMin(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \" \", this.state.symbol, \" \");\n  }\n\n}\n\nclass DatabaseTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.query = props.query;\n    this.elements = undefined;\n    this.state = {\n      elements: [] //this is a list of all the elements gotten from the database in fetch information\n\n    };\n  }\n\n  fetchInformation(query) {\n    // get the info from firebase \n    // fetch information into a list\n    var els = ['derrickneal42@gmailcom', 'dneal3@uoregonedu']; //maybe make a state of emails and the map that to a table, store it in state and have a button that removes that string\n\n    this.elements = els;\n  }\n\n  removeInfo(item) {\n    //remove stuff from the elements list and database\n    console.log('searching for element ' + item);\n    this.elements.splice(this.elements.indexOf(item), 1);\n    this.setState({\n      elements: this.elements\n    });\n  }\n\n  addInfo() {\n    //need to ask for user input or something\n    //then add that to the elements list, and the database\n    var item = prompt(\"Enter Email\");\n    this.elements.push(item);\n    this.setState({\n      elements: this.elements\n    });\n  }\n\n  buildTable() {\n    if (this.elements == undefined) {\n      this.fetchInformation(this.query);\n    }\n\n    var els = this.elements.map((item, i) => {\n      return React.createElement(\"tr\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \" \", item, \" \", React.createElement(\"button\", {\n        onClick: () => this.removeInfo(item),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"-\"), \" \"));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Email\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, els)), React.createElement(\"button\", {\n      onClick: () => this.addInfo(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"+\"));\n  }\n\n  render() {\n    return this.buildTable();\n  }\n\n}\n\nconst AdminPortal = () => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 243\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 244\n  },\n  __self: this\n}, \" Admin Portal \"), React.createElement(CreateTables, {\n  categories: ['Users', 'Admins', 'Programs', 'Common Issues', 'Responses', 'Addresses'],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 245\n  },\n  __self: this\n}));\n\nexport default AdminPortal;","map":{"version":3,"sources":["/Users/derrickneal/Projects/my-app/src/App.js"],"names":["React","CreateTables","Component","constructor","props","state","userinfo","undefined","admininfo","responseinfo","programinfo","issuesinfo","addressinfo","startcategories","categories","getDBTable","q","infostem","console","log","newinfo","setState","addressesinfo","stateHelper","item","render","map","ExpandMinimizeButton","symbol","onExOrMin","onClickFunction","DatabaseTable","query","elements","fetchInformation","els","removeInfo","splice","indexOf","addInfo","prompt","push","buildTable","i","AdminPortal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './adminport.css';\n\nclass CreateTables extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      userinfo: undefined,\n      admininfo: undefined,\n      responseinfo: undefined,\n      programinfo: undefined,\n      issuesinfo: undefined,\n      addressinfo: undefined\n    };\n    this.startcategories = props.categories;\n  }\n\n  getDBTable(q){\n    // i am 100% sure there is a better way to do this\n    var infostem = q+'info';\n    console.log(\"I got Called\" + ' ' + infostem);\n    var newinfo = (<DatabaseTable query={q} />);\n    switch(infostem){\n      case 'Usersinfo':\n        if(this.state.userinfo != undefined){\n          this.setState({\n            userinfo: undefined\n          });\n        }\n        else {\n          this.setState({\n            userinfo: newinfo\n          });\n        }\n        break;\n      case 'Adminsinfo':\n        if(this.state.admininfo != undefined) {\n          this.setState({\n            admininfo: undefined\n          });\n        }\n        else{\n          this.setState({\n            admininfo: newinfo\n          });\n        }\n        break;\n      case 'Responsesinfo':\n        if(this.state.responseinfo != undefined) {\n          this.setState({\n            responseinfo: undefined\n          });\n        }\n        else {\n          this.setState({\n            responseinfo: newinfo\n          });\n        }\n        break;\n      case 'Programsinfo':\n        if(this.state.programinfo != undefined){\n          this.setState({\n            programinfo: undefined\n          });\n        }\n        else {\n          this.setState({\n            programinfo: newinfo\n          });\n        }\n        break;\n      case 'Common Issuesinfo':\n        if(this.state.issuesinfo != undefined){\n          this.setState({\n            issuesinfo: undefined\n          });\n        }\n        else{\n          this.setState({\n            issuesinfo: newinfo\n          });\n        }\n        break;\n      case 'Addressesinfo':\n        if(this.state.addressesinfo != undefined){\n          this.setState({\n            addressesinfo: undefined\n          });\n        }\n        else {\n          this.setState({\n            addressesinfo: newinfo\n          });\n        }\n        break;\n    }\n\n  }\n\n  stateHelper(item) {\n    switch(item){\n      case 'Users':\n        return this.state.userinfo;\n      case 'Admins':\n        return this.state.admininfo;\n      case 'Responses':\n        return this.state.responseinfo;\n      case 'Programs':\n        return this.state.programinfo;\n      case 'Common Issues':\n        return this.state.issuesinfo;\n      case 'Addresses':\n        return this.state.addressesinfo;\n    }\n\n  }\n\n  render() {\n    return (\n      <div>\n        {this.startcategories.map(item => {\n          return (\n            <div key={item}>\n              <label> {item} </label> <ExpandMinimizeButton onClickFunction={() => this.getDBTable(item) } symbol=\"Expand\" /><br /> <br />\n              {this.stateHelper(item)}\n            </div>\n          );\n        })}\n    </div> );\n  }\n}\n\nclass ExpandMinimizeButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      symbol: props.symbol\n    };\n  }\n\n  onExOrMin(){\n    this.props.onClickFunction();\n    if(this.state.symbol == \"Expand\") {\n      this.setState({\n        symbol: \"Minimize\"\n      })\n    }\n    else {\n      this.setState({\n        symbol: \"Expand\"\n      })\n    }\n  }\n\n  render () {\n    return (\n      <button onClick={() => this.onExOrMin()}> {this.state.symbol} </button>\n    );\n  }\n\n}\n\nclass DatabaseTable extends React.Component {\n  constructor(props){\n    super(props);\n    this.query = props.query;\n    this.elements = undefined;\n    this.state = {\n      elements: [] //this is a list of all the elements gotten from the database in fetch information\n    };\n    \n  }\n\n  fetchInformation(query){\n    // get the info from firebase \n    // fetch information into a list\n    var els = ['derrickneal42@gmailcom', 'dneal3@uoregonedu'];\n    //maybe make a state of emails and the map that to a table, store it in state and have a button that removes that string\n    this.elements = els;\n  }\n\n  removeInfo(item){\n    //remove stuff from the elements list and database\n    console.log('searching for element ' + item);\n\n    this.elements.splice(this.elements.indexOf(item), 1);\n    this.setState({\n      elements: this.elements\n    })\n  }\n\n  addInfo() {\n    //need to ask for user input or something\n    //then add that to the elements list, and the database\n\n    var item = prompt(\"Enter Email\");\n    this.elements.push(item);\n    this.setState({\n      elements: this.elements\n    })\n  }\n\n  buildTable()\n  {\n    if(this.elements == undefined){\n      this.fetchInformation(this.query);\n    }\n\n    var els = this.elements.map( (item, i) => {\n      return (\n        <tr key={i}>\n          <td key={i}> {item} <button onClick={() => this.removeInfo(item)}>-</button> </td>\n          \n        </tr>\n      );} \n      ) \n\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Email</th>\n            </tr>\n          </thead>\n          <tbody>\n            {els}\n          </tbody>\n        </table>\n        <button onClick={() => this.addInfo()}>+</button> \n      </div>\n    )\n  }\n\n  render () {\n    return (\n      this.buildTable()\n    );\n  }\n}\n\nconst AdminPortal = () => (\n  <div>\n    <h1> Admin Portal </h1>\n    <CreateTables categories={['Users', 'Admins', 'Programs', 'Common Issues', 'Responses', 'Addresses']} />\n  </div>\n);\n\nexport default AdminPortal;"]},"metadata":{},"sourceType":"module"}