{"ast":null,"code":"// Initialize Firebase \nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDWT1HRjJ-p0jH5pjQPtWLSVuZ2xxyWIDU\",\n  authDomain: \"hfac-sc.firebaseapp.com\",\n  databaseURL: \"https://hfac-sc.firebaseio.com\",\n  projectId: \"hfac-sc\",\n  storageBucket: \"hfac-sc.appspot.com\",\n  messagingSenderId: \"432119133740\"\n};\n\nclass Firebase {\n  constructor() {\n    firebase.initializeApp(config);\n    console.log(\"firebase intialized\");\n  }\n\n  doSignIn(cleanUpFunc) {\n    //signs in user if a user is not signed in already\n    var a = firebase.auth();\n\n    if (a.currentUser == null) {\n      console.log(\"signing in\");\n      var provider = new firebase.auth.GoogleAuthProvider();\n      var user = a.signInWithPopup(provider);\n      user.then(function (result) {\n        console.log(\"result: \", result); // this.findUser()\n\n        cleanUpFunc(result.user.email, false);\n      }) //error code that warns user of potential mishaps\n      .catch(function (error) {\n        var errorCode = error.code;\n\n        if (errorCode === \"auth/popup-closed-by-user\") {\n          console.log(\"Sign in window closed by user before finalizing authentication\");\n        } else {\n          alert(error);\n        }\n      });\n    } else {\n      console.log(\"user already signed in\");\n    }\n  }\n\n  doSignOut(cleanUpFunc) {\n    var a = firebase.auth();\n\n    if (a.currentUser != null) {\n      a.signOut();\n      cleanUpFunc();\n      console.log(\"signed out\");\n    }\n  }\n\n  checkStatus() {\n    var a = firebase.auth();\n\n    if (a.currentUser != null) {\n      console.log(\"user signed in\");\n    } else {\n      console.log(\"no user signed in\");\n    }\n  }\n\n}\n\nexport default Firebase;","map":{"version":3,"sources":["/Users/dloyd/summer_sc/shelter-care/src/components/firebase/app.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Firebase","constructor","initializeApp","console","log","doSignIn","cleanUpFunc","a","auth","currentUser","provider","GoogleAuthProvider","user","signInWithPopup","then","result","email","catch","error","errorCode","code","alert","doSignOut","signOut","checkStatus"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACE,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,yBAFC;AAGbC,EAAAA,WAAW,EAAE,gCAHA;AAIbC,EAAAA,SAAS,EAAE,SAJE;AAKbC,EAAAA,aAAa,EAAE,qBALF;AAMbC,EAAAA,iBAAiB,EAAE;AANN,CAAf;;AASA,MAAMC,QAAN,CAAc;AACZC,EAAAA,WAAW,GAAE;AACXT,IAAAA,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;;AACDC,EAAAA,QAAQ,CAACC,WAAD,EAAc;AACpB;AACA,QAAIC,CAAC,GAAGf,QAAQ,CAACgB,IAAT,EAAR;;AACA,QAAGD,CAAC,CAACE,WAAF,IAAiB,IAApB,EACA;AACEN,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAIM,QAAQ,GAAG,IAAIlB,QAAQ,CAACgB,IAAT,CAAcG,kBAAlB,EAAf;AACA,UAAIC,IAAI,GAAGL,CAAC,CAACM,eAAF,CAAkBH,QAAlB,CAAX;AAEAE,MAAAA,IAAI,CAACE,IAAL,CAAU,UAASC,MAAT,EACV;AACEZ,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBW,MAAxB,EADF,CAEC;;AACCT,QAAAA,WAAW,CAACS,MAAM,CAACH,IAAP,CAAYI,KAAb,EAAoB,KAApB,CAAX;AACD,OALD,EAMA;AANA,OAOCC,KAPD,CAOO,UAASC,KAAT,EACP;AACC,YAAIC,SAAS,GAAGD,KAAK,CAACE,IAAtB;;AACA,YAAID,SAAS,KAAK,2BAAlB,EACC;AACEhB,UAAAA,OAAO,CAACC,GAAR,CAAY,gEAAZ;AACD,SAHF,MAKC;AACEiB,UAAAA,KAAK,CAACH,KAAD,CAAL;AACD;AACF,OAlBD;AAmBD,KAzBD,MA2BA;AACEf,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;AACF;;AACDkB,EAAAA,SAAS,CAAChB,WAAD,EAAa;AACpB,QAAIC,CAAC,GAAGf,QAAQ,CAACgB,IAAT,EAAR;;AACA,QAAGD,CAAC,CAACE,WAAF,IAAiB,IAApB,EACA;AACEF,MAAAA,CAAC,CAACgB,OAAF;AACAjB,MAAAA,WAAW;AACXH,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;AACF;;AACDoB,EAAAA,WAAW,GAAE;AACX,QAAIjB,CAAC,GAAGf,QAAQ,CAACgB,IAAT,EAAR;;AACA,QAAGD,CAAC,CAACE,WAAF,IAAiB,IAApB,EACA;AACEN,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,KAHD,MAKA;AACED,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD;AACF;;AA1DW;;AA6Dd,eAAeJ,QAAf","sourcesContent":["// Initialize Firebase \nimport firebase from 'firebase/app'; \nimport 'firebase/auth';\n  const config = {\n    apiKey: \"AIzaSyDWT1HRjJ-p0jH5pjQPtWLSVuZ2xxyWIDU\",\n    authDomain: \"hfac-sc.firebaseapp.com\",\n    databaseURL: \"https://hfac-sc.firebaseio.com\",\n    projectId: \"hfac-sc\",\n    storageBucket: \"hfac-sc.appspot.com\",\n    messagingSenderId: \"432119133740\"\n  };\n\n  class Firebase{\n    constructor(){\n      firebase.initializeApp(config);\n      console.log(\"firebase intialized\");\n    }\n    doSignIn(cleanUpFunc) {\n      //signs in user if a user is not signed in already\n      var a = firebase.auth();\n      if(a.currentUser == null)\n      {\n        console.log(\"signing in\");\n        var provider = new firebase.auth.GoogleAuthProvider();\n        var user = a.signInWithPopup(provider);\n\n        user.then(function(result)\n        {\n          console.log(\"result: \", result);\n         // this.findUser()\n          cleanUpFunc(result.user.email, false);\n        })\n        //error code that warns user of potential mishaps\n        .catch(function(error)\n        {\n         var errorCode = error.code;\n         if (errorCode === \"auth/popup-closed-by-user\")\n          {\n            console.log(\"Sign in window closed by user before finalizing authentication\");\n          }\n          else\n          {\n            alert(error);\n          }\n        });\n      }\n      else\n      {\n        console.log(\"user already signed in\");\n      }\n    }\n    doSignOut(cleanUpFunc){\n      var a = firebase.auth();\n      if(a.currentUser != null)\n      {\n        a.signOut();\n        cleanUpFunc();\n        console.log(\"signed out\");\n      }\n    }\n    checkStatus(){\n      var a = firebase.auth();\n      if(a.currentUser != null)\n      {\n        console.log(\"user signed in\");\n      }\n      else\n      {\n        console.log(\"no user signed in\");\n      }\n    }\n  }\n\n  export default Firebase;\n"]},"metadata":{},"sourceType":"module"}