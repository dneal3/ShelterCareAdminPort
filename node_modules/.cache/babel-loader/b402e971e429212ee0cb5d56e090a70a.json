{"ast":null,"code":"var _jsxFileName = \"/Users/dloyd/summer_sc/shelter-care/src/components/admin/index.js\";\nimport React from 'react';\nimport { FirebaseContext } from '../firebase';\n\nfunction testInclude() {\n  console.log(\"testing include\");\n  console.log(\"hello world\".includes(\"\"));\n}\n\nclass Admin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      statusStr: \"Status: no action yet taken\",\n      responseList: [],\n      responseQuery: \"\"\n    };\n    setTimeout(this.init, 200);\n  }\n\n  init() {\n    this.setSearch(\"all\");\n  }\n\n  setStatus(newStatus) {\n    this.setState({\n      statusStr: \"Status: \" + newStatus\n    });\n  }\n\n  updateList(newElement, clearList = false) {\n    //updates the list, clearing it instead if clearList = true\n    var newList;\n\n    if (clearList) {\n      newList = [];\n    } else {\n      newList = this.state.responseList;\n      newList.push(newElement);\n    }\n\n    this.setState({\n      responseList: newList\n    });\n  }\n\n  getField(field) {\n    //returns the react elements to render the list of the given field\n    const fieldList = this.state.responseList;\n    const fieldItems = fieldList.map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, item));\n    return fieldItems;\n  }\n\n  setSearch(field, event) {\n    //sets the search value of the given field\n    testInclude();\n\n    if (field === \"all\") {\n      window.document.getElementById(\"searchResponse\").click();\n    } else if (field === \"response\") {\n      //var newQuery = event.target.value;\n      // this.setState({responseQuery: newQuery});\n      window.document.getElementById(\"searchResponse\").click();\n    }\n\n    console.log(\"search complete\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Page only for admins to see\"), React.createElement(\"p\", {\n      id: \"statusInformer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.statusStr)), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"addAdmin\",\n      onClick: () => {\n        firebase.doAddAdmin(\"test.AdminsEmail@gmail.com\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Add an admin\")), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"delAdmin\",\n      onClick: () => {\n        firebase.doDeleteAdmin(\"test.AdminsEmail@gmail.com\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Delete an admin\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"addUser\",\n      onClick: () => {\n        firebase.doAddUser(\"test.UserEmails@gmail.com\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Add an User\")), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"delUser\",\n      onClick: () => {\n        firebase.doDeleteUser(\"test.UserEmails@gmail.com\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Delete an User\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"addIssue\",\n      onClick: () => {\n        firebase.doAddIssue(\"test issue\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Add an issue\")), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"delIssue\",\n      onClick: () => {\n        firebase.doDeleteIssue(\"test issue\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Delete an issue\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Responses\"), React.createElement(\"input\", {\n      id: \"resSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"response\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"addResponse\",\n      onClick: () => {\n        firebase.doAddResponse(\"test response\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Add a response\")), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"delResponse\",\n      onClick: () => {\n        firebase.doDeleteResponse(\"test response\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Delete a response\")), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"searchResponse\",\n      onClick: () => {\n        firebase.doSearch({\n          type: \"response\",\n          substr: window.document.getElementById(\"resSearchInput\").value,\n          updateListBind: this.updateList.bind(this)\n        }, this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"search responses\")), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, this.getField(\"responses\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"addProgram\",\n      onClick: () => {\n        firebase.doAddProgram(\"test program\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Add a program\")), React.createElement(FirebaseContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, firebase => React.createElement(\"button\", {\n      id: \"delProgram\",\n      onClick: () => {\n        firebase.doDeleteProgram(\"test program\", this.setStatus.bind(this));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Delete a program\")));\n  }\n\n}\n\nexport default Admin;","map":{"version":3,"sources":["/Users/dloyd/summer_sc/shelter-care/src/components/admin/index.js"],"names":["React","FirebaseContext","testInclude","console","log","includes","Admin","Component","constructor","state","statusStr","responseList","responseQuery","setTimeout","init","setSearch","setStatus","newStatus","setState","updateList","newElement","clearList","newList","push","getField","field","fieldList","fieldItems","map","item","event","window","document","getElementById","click","render","firebase","doAddAdmin","bind","doDeleteAdmin","doAddUser","doDeleteUser","doAddIssue","doDeleteIssue","doAddResponse","doDeleteResponse","doSearch","type","substr","value","updateListBind","doAddProgram","doDeleteProgram"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {FirebaseContext} from '../firebase';\nfunction testInclude()\n{\n    console.log(\"testing include\");\n    console.log(\"hello world\".includes(\"\"));\n}\nclass Admin extends React.Component\n{\n    constructor()\n    {\n        super();\n        this.state = {\n            statusStr: \"Status: no action yet taken\",\n            responseList: [],\n            responseQuery: \"\"\n        };\n        setTimeout(this.init, 200);\n    }\n    init()\n    {\n        this.setSearch(\"all\");\n    }\n    setStatus(newStatus)\n    {\n        this.setState({statusStr: \"Status: \"+newStatus});\n    }\n    updateList(newElement, clearList=false)\n    {\n        //updates the list, clearing it instead if clearList = true\n        var newList;\n        if(clearList)\n        {\n            newList = []\n        }\n        else\n        {\n            newList = this.state.responseList;\n            newList.push(newElement);\n\n        }\n        this.setState({responseList: newList});\n    }\n    getField(field)\n    {\n        //returns the react elements to render the list of the given field\n        const fieldList = this.state.responseList;\n        const fieldItems = fieldList.map((item) => <li key={item}>{item}</li>)\n         return fieldItems;\n    }\n    setSearch(field, event)\n    {\n        //sets the search value of the given field\n        testInclude();\n        if(field === \"all\")\n        {\n            window.document.getElementById(\"searchResponse\").click();\n\n        }\n        else if(field === \"response\")\n        {\n            //var newQuery = event.target.value;\n           // this.setState({responseQuery: newQuery});\n            window.document.getElementById(\"searchResponse\").click();\n        }\n        console.log(\"search complete\");\n        \n    }\n    render(){\n        return(\n            \n        <div>\n            <div>\n                <p>\n                   Page only for admins to see\n                </p>\n                <p id=\"statusInformer\">{this.state.statusStr}</p>\n            </div>\n\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addAdmin\" onClick={()=>{firebase.doAddAdmin(\"test.AdminsEmail@gmail.com\", this.setStatus.bind(this));}}>Add an admin</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delAdmin\" onClick={()=>{firebase.doDeleteAdmin(\"test.AdminsEmail@gmail.com\", this.setStatus.bind(this))}}>Delete an admin</button>\n                }\n            </FirebaseContext.Consumer>\n            <div></div>\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addUser\" onClick={()=>{firebase.doAddUser(\"test.UserEmails@gmail.com\", this.setStatus.bind(this));}}>Add an User</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delUser\" onClick={()=>{firebase.doDeleteUser(\"test.UserEmails@gmail.com\", this.setStatus.bind(this))}}>Delete an User</button>\n                }\n            </FirebaseContext.Consumer>\n            <div></div>\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addIssue\" onClick={()=>{firebase.doAddIssue(\"test issue\", this.setStatus.bind(this));}}>Add an issue</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delIssue\" onClick={()=>{firebase.doDeleteIssue(\"test issue\", this.setStatus.bind(this))}}>Delete an issue</button>\n                }\n            </FirebaseContext.Consumer>\n            <div></div>\n            <hr/>\n            <p>Responses</p>\n            <input id=\"resSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"response\",event)}}></input>\n            <div />\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addResponse\" onClick={()=>{firebase.doAddResponse(\"test response\", this.setStatus.bind(this));}}>Add a response</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delResponse\" onClick={()=>{firebase.doDeleteResponse(\"test response\", this.setStatus.bind(this))}}>Delete a response</button>\n                }\n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"searchResponse\" onClick={()=>{firebase.doSearch({type:\"response\", substr:window.document.getElementById(\"resSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.setStatus.bind(this))}}>search responses</button>\n                }\n            </FirebaseContext.Consumer>\n            <ul>\n                {this.getField(\"responses\")}\n            </ul>\n            <div></div>\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addProgram\" onClick={()=>{firebase.doAddProgram(\"test program\", this.setStatus.bind(this));}}>Add a program</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delProgram\" onClick={()=>{firebase.doDeleteProgram(\"test program\", this.setStatus.bind(this))}}>Delete a program</button>\n                }\n            </FirebaseContext.Consumer>\n            </div>\n        );\n    }\n}\n\nexport default Admin;"]},"metadata":{},"sourceType":"module"}