{"ast":null,"code":"var _jsxFileName = \"/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/fieldBar/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport AdminPortal, { DatabaseTable } from '../dataTable';\nimport { Accordion, AccordionItem } from 'react-sanfona';\n\nclass Fields extends React.Component {\n  constructor() {\n    super();\n    setTimeout(this.init.bind(this), 200);\n  }\n\n  init() {\n    this.setSearch(\"all\");\n  }\n\n  updateList(newElement, type, clearList = false) {\n    //updates the list, clearing it instead if clearList = true\n    //TODO: change to make dynamic\n    if (clearList) {\n      this.props.clearList(type);\n    } else {\n      this.props.updateField(\"ADD\" + type.toUpperCase(), newElement);\n    }\n  }\n\n  getField(field) {\n    //returns the react elements to render the list of the given field\n    var fieldList;\n\n    switch (field) {\n      case \"admin\":\n        fieldList = this.props.fields.adminField;\n        break;\n\n      case \"issue\":\n        fieldList = this.props.fields.issueField;\n        break;\n\n      case \"response\":\n        fieldList = this.props.fields.responseField;\n        break;\n\n      case \"program\":\n        fieldList = this.props.fields.programField;\n        break;\n\n      case \"user\":\n        fieldList = this.props.fields.userField;\n        break;\n\n      case \"address\": //TODO are we supporting addresses?\n\n      default:\n        console.log('unrecognized field ' + field + ' name in getField');\n        fieldList = []; // avoid crash by iterating over nothing\n\n        break;\n    } //const fieldItems = fieldList.map((item) => <li key ={item}>{item}</li>);\n\n\n    return fieldList;\n  }\n\n  setSearch(field, event) {\n    //sets the search value of the given field\n    if (field === \"all\") {\n      this.props.firebase.doSearch({\n        type: \"response\",\n        substr: window.document.getElementById(\"resSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n      this.props.firebase.doSearch({\n        type: \"admin\",\n        substr: window.document.getElementById(\"adminSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n      this.props.firebase.doSearch({\n        type: \"issue\",\n        substr: window.document.getElementById(\"issueSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n      this.props.firebase.doSearch({\n        type: \"user\",\n        substr: window.document.getElementById(\"userSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n      this.props.firebase.doSearch({\n        type: \"program\",\n        substr: window.document.getElementById(\"programSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n    } else if (field === \"response\") {\n      this.props.firebase.doSearch({\n        type: \"response\",\n        substr: window.document.getElementById(\"resSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n    } else if (field === \"admin\") {\n      this.props.firebase.doSearch({\n        type: \"admin\",\n        substr: window.document.getElementById(\"adminSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n    } else if (field === \"issue\") {\n      this.props.firebase.doSearch({\n        type: \"issue\",\n        substr: window.document.getElementById(\"issueSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n    } else if (field === \"user\") {\n      this.props.firebase.doSearch({\n        type: \"user\",\n        substr: window.document.getElementById(\"userSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n    } else if (field === \"program\") {\n      this.props.firebase.doSearch({\n        type: \"program\",\n        substr: window.document.getElementById(\"programSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n    }\n  }\n\n  render() {\n    // console.log(this.props.fields);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Accordion, {\n      allowMultiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, ['User', 'Admin', 'Program', 'Issue', 'Response', 'Address'].map(item => {\n      return React.createElement(AccordionItem, {\n        key: item,\n        title: \"\".concat(item),\n        expanded: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(DatabaseTable, {\n        query: item,\n        firebase: this.props.firebase,\n        updateStatus: this.props.updateStatus,\n        updateField: this.props.updateField,\n        elements: this.getField(item.toLowerCase()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }));\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Admins\"), React.createElement(\"input\", {\n      id: \"adminSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"admin\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"addAdmin\",\n      onClick: () => {\n        this.props.firebase.doAddAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Add an admin\"), React.createElement(\"button\", {\n      id: \"delAdmin\",\n      onClick: () => {\n        this.props.firebase.doDeleteAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Delete an admin\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Users\"), React.createElement(\"input\", {\n      id: \"userSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"user\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"addUser\",\n      onClick: () => {\n        this.props.firebase.doAddUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Add an User\"), React.createElement(\"button\", {\n      id: \"delUser\",\n      onClick: () => {\n        this.props.firebase.doDeleteUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Delete an User\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Issues\"), React.createElement(\"input\", {\n      id: \"issueSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"issue\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"addIssue\",\n      onClick: () => {\n        this.props.firebase.doAddIssue(\"test issue\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Add an issue\"), React.createElement(\"button\", {\n      id: \"delIssue\",\n      onClick: () => {\n        this.props.firebase.doDeleteIssue(\"test issue\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"Delete an issue\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Responses\"), React.createElement(\"input\", {\n      id: \"resSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"response\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"addResponse\",\n      onClick: () => {\n        this.props.firebase.doAddHelper({\n          type: \"response\",\n          adding: \"test response\",\n          statusFunc: this.props.updateStatus\n        }, () => {\n          this.props.updateField(\"ADDRESPONSE\", \"test response\");\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Add a response\"), React.createElement(\"button\", {\n      id: \"delResponse\",\n      onClick: () => {\n        this.props.firebase.doDeleteHelper({\n          type: \"response\",\n          deleting: \"test response\",\n          statusFunc: this.props.updateStatus\n        }, () => {\n          this.props.updateField(\"DELETERESPONSE\", \"test response\");\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Delete a response\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.getField(\"response\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Programs\"), React.createElement(\"input\", {\n      id: \"programSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"program\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"addProgram\",\n      onClick: () => {\n        this.props.firebase.doAddProgram(\"test program\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Add a program\"), React.createElement(\"button\", {\n      id: \"delProgram\",\n      onClick: () => {\n        this.props.firebase.doDeleteProgram(\"test program\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Delete a program\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    fields: state.fieldReducer\n  };\n};\n\nconst mapDispatcherToProps = dispatch => {\n  return {\n    updateStatus: newStatus => {\n      dispatch({\n        type: \"UPDATESTATUS\",\n        payload: newStatus\n      });\n    },\n    updateField: (updateType, element) => {\n      dispatch({\n        type: updateType,\n        payload: element\n      });\n    },\n    clearList: fieldName => {\n      dispatch({\n        type: \"CLEARLIST\",\n        payload: fieldName\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatcherToProps)(Fields);","map":{"version":3,"sources":["/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/fieldBar/index.js"],"names":["React","connect","AdminPortal","DatabaseTable","Accordion","AccordionItem","Fields","Component","constructor","setTimeout","init","bind","setSearch","updateList","newElement","type","clearList","props","updateField","toUpperCase","getField","field","fieldList","fields","adminField","issueField","responseField","programField","userField","console","log","event","firebase","doSearch","substr","window","document","getElementById","value","updateListBind","updateStatus","render","map","item","toLowerCase","doAddAdmin","doDeleteAdmin","doAddUser","doDeleteUser","doAddIssue","doDeleteIssue","doAddHelper","adding","statusFunc","doDeleteHelper","deleting","doAddProgram","doDeleteProgram","mapStateToProps","state","fieldReducer","mapDispatcherToProps","dispatch","newStatus","payload","updateType","element","fieldName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport AdminPortal, {DatabaseTable} from '../dataTable';\nimport { Accordion, AccordionItem } from 'react-sanfona';\n\n\nclass Fields extends React.Component\n{\n    constructor()\n    {\n        super();\n        setTimeout(this.init.bind(this), 200);\n    }\n    init()\n    {\n        this.setSearch(\"all\");\n    }\n    updateList(newElement, type, clearList=false)\n    {\n        //updates the list, clearing it instead if clearList = true\n        //TODO: change to make dynamic\n        if(clearList)\n        {\n            this.props.clearList(type);\n        }\n        else\n        {\n            this.props.updateField(\"ADD\"+type.toUpperCase(), newElement);\n        }\n    }\n    getField(field)\n    {\n        //returns the react elements to render the list of the given field\n        var fieldList;\n        switch(field)\n        {\n            \n            case \"admin\":\n                fieldList = this.props.fields.adminField;\n                break;\n            case \"issue\":\n                fieldList = this.props.fields.issueField;\n                break;\n            case \"response\":\n                fieldList = this.props.fields.responseField;\n                break;\n            case \"program\":\n                fieldList = this.props.fields.programField;\n                break;\n            case \"user\":\n                fieldList = this.props.fields.userField;\n                break;\n            case \"address\":\n                //TODO are we supporting addresses?\n            default:\n                console.log('unrecognized field ' + field + ' name in getField');\n                fieldList = []; // avoid crash by iterating over nothing\n                break;\n        }\n        \n        //const fieldItems = fieldList.map((item) => <li key ={item}>{item}</li>);\n         return fieldList;\n    }\n    setSearch(field, event)\n    {\n        //sets the search value of the given field\n        if(field === \"all\")\n        {\n            this.props.firebase.doSearch({type:\"response\", substr:window.document.getElementById(\"resSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n            this.props.firebase.doSearch({type:\"admin\", substr:window.document.getElementById(\"adminSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n            this.props.firebase.doSearch({type:\"issue\", substr:window.document.getElementById(\"issueSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n            this.props.firebase.doSearch({type:\"user\", substr:window.document.getElementById(\"userSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n            \n            this.props.firebase.doSearch({type:\"program\", substr:window.document.getElementById(\"programSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n        \n        }\n        else if(field === \"response\")\n        {\n            this.props.firebase.doSearch({type:\"response\", substr:window.document.getElementById(\"resSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n        }\n        else if(field === \"admin\")\n        {\n            this.props.firebase.doSearch({type:\"admin\", substr:window.document.getElementById(\"adminSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n        }\n        else if(field === \"issue\")\n        {\n            this.props.firebase.doSearch({type:\"issue\", substr:window.document.getElementById(\"issueSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n        }\n        else if(field === \"user\")\n        {\n            this.props.firebase.doSearch({type:\"user\", substr:window.document.getElementById(\"userSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n        }\n        else if(field === \"program\")\n        {\n            this.props.firebase.doSearch({type:\"program\", substr:window.document.getElementById(\"programSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n        }\n        \n    }\n    render(){\n       // console.log(this.props.fields);\n        return(\n            <div>\n                <div/>\n                <hr/>\n                <Accordion allowMultiple = {true}>\n        {['User', 'Admin', 'Program', 'Issue', 'Response', 'Address'].map(item => {\n          return (\n            <AccordionItem key = {item} title={`${item}`} expanded = {true}>\n              <DatabaseTable query = {item} firebase = {this.props.firebase} updateStatus = {this.props.updateStatus} updateField = {this.props.updateField} elements = {this.getField(item.toLowerCase())}/>\n            </AccordionItem>\n\n          );\n        })}\n      </Accordion>\n                <p>Admins</p>\n                <input id=\"adminSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"admin\",event)}}></input>\n                <button id=\"addAdmin\" onClick={()=>{this.props.firebase.doAddAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);}}>Add an admin</button>\n                <button id=\"delAdmin\" onClick={()=>{this.props.firebase.doDeleteAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);}}>Delete an admin</button>\n                <div/>\n                <hr/>\n                <p>Users</p>\n                <input id=\"userSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"user\",event)}}></input>\n                <button id=\"addUser\" onClick={()=>{this.props.firebase.doAddUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);}}>Add an User</button>\n                <button id=\"delUser\" onClick={()=>{this.props.firebase.doDeleteUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);}}>Delete an User</button>\n                <div/>\n                <hr/>\n                <p>Issues</p>\n                <input id=\"issueSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"issue\",event)}}></input>\n                <button id=\"addIssue\" onClick={()=>{this.props.firebase.doAddIssue(\"test issue\", this.props.updateStatus);}}>Add an issue</button>\n                <button id=\"delIssue\" onClick={()=>{this.props.firebase.doDeleteIssue(\"test issue\", this.props.updateStatus);}}>Delete an issue</button>\n                <div/>\n                <hr/>\n                <p>Responses</p>\n                <input id=\"resSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"response\",event)}}></input>\n                <div />\n                <button id=\"addResponse\" onClick={()=>{this.props.firebase.doAddHelper({type: \"response\", adding: \"test response\", statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"ADDRESPONSE\", \"test response\")});}}>Add a response</button>\n                <button id=\"delResponse\" onClick={()=>{this.props.firebase.doDeleteHelper({type: \"response\", deleting: \"test response\", statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"DELETERESPONSE\", \"test response\");});}}>Delete a response</button>\n                <ul>\n                {this.getField(\"response\")}\n                </ul>\n                <div/>\n                <hr/>\n                <p>Programs</p>\n                <input id=\"programSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"program\",event)}}></input>\n                <button id=\"addProgram\" onClick={()=>{this.props.firebase.doAddProgram(\"test program\", this.props.updateStatus);}}>Add a program</button>\n                <button id=\"delProgram\" onClick={()=>{this.props.firebase.doDeleteProgram(\"test program\", this.props.updateStatus);}}>Delete a program</button>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        fields: state.fieldReducer\n    }\n};\nconst mapDispatcherToProps = (dispatch) => {\n    return {\n        updateStatus: (newStatus) => {dispatch({type: \"UPDATESTATUS\", payload: newStatus})},\n        updateField: (updateType, element) => {\n            dispatch({type: updateType, payload: element});\n        },\n        clearList: (fieldName) => {dispatch({type: \"CLEARLIST\", payload: fieldName});}\n    }\n};\nexport default connect(mapStateToProps, mapDispatcherToProps)(Fields);"]},"metadata":{},"sourceType":"module"}