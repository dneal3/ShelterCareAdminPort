{"ast":null,"code":"var _jsxFileName = \"/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/home/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FirebaseContext } from '../firebase';\nimport SignOut from '../signOut';\nimport Admin from '../admin';\nimport Account from '../account';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userSignedIn: false,\n      user: \"\",\n      userName: \"\",\n      isAdmin: false\n    };\n  }\n\n  signOutUser() {\n    this.props.userSignOut();\n  }\n\n  render() {\n    var adminPage = \"\";\n    var accountPage = \"\";\n\n    if (this.props.user.userSignedIn) {\n      accountPage = React.createElement(Account, {\n        userName: this.props.user.userName,\n        userEmail: this.props.user.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n\n    if (this.props.user.isAdmin) {\n      adminPage = React.createElement(Admin, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, accountPage, adminPage);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //return object with key value pairs that this component can use\n  // localPropName: globalStateNameFromRedux\n  return {\n    user: state.userAuthReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  //return object with key value pairs that this component can use\n  // localPropName: function that will call redux store dispatch\n  return {\n    userSignOut: () => {\n      dispatch({\n        type: \"SIGNOUT\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/home/index.js"],"names":["React","connect","FirebaseContext","SignOut","Admin","Account","Home","Component","constructor","state","userSignedIn","user","userName","isAdmin","signOutUser","props","userSignOut","render","adminPage","accountPage","email","mapStateToProps","userAuthReducer","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAGA,MAAMC,IAAN,SAAmBN,KAAK,CAACO,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,KADL;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AACDC,EAAAA,WAAW,GAAE;AACT,SAAKC,KAAL,CAAWC,WAAX;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,WAAW,GAAG,EAAlB;;AACA,QAAG,KAAKJ,KAAL,CAAWJ,IAAX,CAAgBD,YAAnB,EACA;AACIS,MAAAA,WAAW,GAAG,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAI,KAAKJ,KAAL,CAAWJ,IAAX,CAAgBC,QAArC;AAA+C,QAAA,SAAS,EAAE,KAAKG,KAAL,CAAWJ,IAAX,CAAgBS,KAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACH;;AACD,QAAG,KAAKL,KAAL,CAAWJ,IAAX,CAAgBE,OAAnB,EACA;AACIK,MAAAA,SAAS,GAAG,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAZ;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,WADL,EAEKD,SAFL,CADJ;AAOH;;AA/B6B;;AAkClC,MAAMG,eAAe,GAAIZ,KAAD,IAAW;AAClC;AACA;AACA,SAAO;AACAE,IAAAA,IAAI,EAAEF,KAAK,CAACa;AADZ,GAAP;AAGA,CAND;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC;AACA;AACA,SAAO;AACIR,IAAAA,WAAW,EAAE,MAAM;AAACQ,MAAAA,QAAQ,CAAC;AACzBC,QAAAA,IAAI,EAAE;AADmB,OAAD,CAAR;AAGvB;AAJD,GAAP;AAMA,CATD;;AAWA,eAAexB,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CjB,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { FirebaseContext } from '../firebase';\nimport SignOut from '../signOut';\nimport Admin from '../admin';\nimport Account from '../account';\n\n\nclass Home extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            userSignedIn: false,\n            user: \"\",\n            userName: \"\",\n            isAdmin: false\n        };\n    }\n    signOutUser(){\n        this.props.userSignOut();\n    }\n    render(){\n        var adminPage = \"\"\n        var accountPage = \"\"\n        if(this.props.user.userSignedIn)\n        {\n            accountPage = <Account userName = {this.props.user.userName} userEmail={this.props.user.email}></Account>\n        }\n        if(this.props.user.isAdmin)\n        {\n            adminPage = <Admin />\n        }\n        return (\n            <div>\n                {accountPage}\n                {adminPage}\n            </div>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: globalStateNameFromRedux\n\treturn {\n        user: state.userAuthReducer\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: function that will call redux store dispatch\n\treturn {\n            userSignOut: () => {dispatch({\n                type: \"SIGNOUT\"\n            });\n        }\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}