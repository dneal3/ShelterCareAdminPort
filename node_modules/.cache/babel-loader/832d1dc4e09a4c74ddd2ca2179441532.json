{"ast":null,"code":"var _jsxFileName = \"/Users/dloyd/summer_sc/shelter-care/src/components/fieldBar/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nclass Fields extends React.Component {\n  constructor() {\n    super();\n    setTimeout(this.init.bind(this), 200);\n  }\n\n  init() {\n    this.setSearch(\"all\");\n  }\n\n  updateList(newElement, clearList = false) {\n    //updates the list, clearing it instead if clearList = true\n    if (clearList) {\n      this.props.clearList(\"response\");\n    } else {\n      this.props.updateField(\"ADDRESPONSE\", newElement);\n    }\n  }\n\n  getField(field) {\n    //returns the react elements to render the list of the given field\n    var fieldList;\n\n    switch (field) {\n      case \"admin\":\n        fieldList = this.props.fields.adminField;\n        break;\n\n      case \"issue\":\n        fieldList = this.props.fields.issueField;\n        break;\n\n      case \"response\":\n        fieldList = this.props.fields.responseField;\n        break;\n\n      case \"program\":\n        fieldList = this.props.fields.programField;\n        break;\n\n      case \"user\":\n        fieldList = this.props.fields.userField;\n        break;\n\n      default:\n        console.log(\"unrecognized field name in getField\");\n        break;\n    }\n\n    const fieldItems = fieldList.map(item => React.createElement(\"li\", {\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, item));\n    return fieldItems;\n  }\n\n  setSearch(field, event) {\n    //sets the search value of the given field\n    if (field === \"all\") {\n      window.document.getElementById(\"searchResponse\").click();\n    } else if (field === \"response\") {\n      this.props.firebase.doSearch({\n        type: \"response\",\n        substr: window.document.getElementById(\"resSearchInput\").value,\n        updateListBind: this.updateList.bind(this)\n      }, this.props.updateStatus);\n    }\n  }\n\n  render() {\n    console.log(\"props of fieldBar: \", this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Admins\"), React.createElement(\"button\", {\n      id: \"addAdmin\",\n      onClick: () => {\n        this.props.firebase.doAddAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Add an admin\"), React.createElement(\"button\", {\n      id: \"delAdmin\",\n      onClick: () => {\n        this.props.firebase.doDeleteAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Delete an admin\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Users\"), React.createElement(\"button\", {\n      id: \"addUser\",\n      onClick: () => {\n        this.props.firebase.doAddUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Add an User\"), React.createElement(\"button\", {\n      id: \"delUser\",\n      onClick: () => {\n        this.props.firebase.doDeleteUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Delete an User\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Issues\"), React.createElement(\"button\", {\n      id: \"addIssue\",\n      onClick: () => {\n        this.props.firebase.doAddIssue(\"test issue\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Add an issue\"), React.createElement(\"button\", {\n      id: \"delIssue\",\n      onClick: () => {\n        this.props.firebase.doDeleteIssue(\"test issue\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Delete an issue\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Responses\"), React.createElement(\"input\", {\n      id: \"resSearchInput\",\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => {\n        this.setSearch(\"response\", event);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      id: \"addResponse\",\n      onClick: () => {\n        this.props.firebase.doAddResponse(\"test response\", this.props.updateStatus);\n        this.props.updateField(\"ADDRESPONSE\", \"test response\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Add a response\"), React.createElement(\"button\", {\n      id: \"delResponse\",\n      onClick: () => {\n        this.props.firebase.doDeleteResponse(\"test response\", this.props.updateStatus);\n        this.props.updateField(\"DELETERESPONSE\", \"test response\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Delete a response\"), React.createElement(\"button\", {\n      id: \"searchResponse\",\n      onClick: () => {\n        this.props.firebase.doSearch({\n          type: \"response\",\n          substr: window.document.getElementById(\"resSearchInput\").value,\n          updateListBind: this.updateList.bind(this)\n        }, this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"search responses\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.getField(\"response\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Programs\"), React.createElement(\"button\", {\n      id: \"addProgram\",\n      onClick: () => {\n        this.props.firebase.doAddProgram(\"test program\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Add a program\"), React.createElement(\"button\", {\n      id: \"delProgram\",\n      onClick: () => {\n        this.props.firebase.doDeleteProgram(\"test program\", this.props.updateStatus);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Delete a program\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    fields: state.fieldReducer\n  };\n};\n\nconst mapDispatcherToProps = dispatch => {\n  return {\n    updateStatus: newStatus => {\n      dispatch({\n        type: \"UPDATESTATUS\",\n        payload: newStatus\n      });\n    },\n    updateField: (updateType, element) => {\n      dispatch({\n        type: updateType,\n        payload: element\n      });\n    },\n    clearList: fieldName => {\n      dispatch({\n        type: \"CLEARLIST\",\n        payload: fieldName\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatcherToProps)(Fields);","map":{"version":3,"sources":["/Users/dloyd/summer_sc/shelter-care/src/components/fieldBar/index.js"],"names":["React","connect","Fields","Component","constructor","setTimeout","init","bind","setSearch","updateList","newElement","clearList","props","updateField","getField","field","fieldList","fields","adminField","issueField","responseField","programField","userField","console","log","fieldItems","map","item","event","window","document","getElementById","click","firebase","doSearch","type","substr","value","updateListBind","updateStatus","render","doAddAdmin","doDeleteAdmin","doAddUser","doDeleteUser","doAddIssue","doDeleteIssue","doAddResponse","doDeleteResponse","doAddProgram","doDeleteProgram","mapStateToProps","state","fieldReducer","mapDispatcherToProps","dispatch","newStatus","payload","updateType","element","fieldName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\n\nclass Fields extends React.Component\n{\n    constructor()\n    {\n        super();\n        setTimeout(this.init.bind(this), 200);\n    }\n    init()\n    {\n        this.setSearch(\"all\");\n    }\n    updateList(newElement, clearList=false)\n    {\n        //updates the list, clearing it instead if clearList = true\n        if(clearList)\n        {\n            this.props.clearList(\"response\");\n        }\n        else\n        {\n            this.props.updateField(\"ADDRESPONSE\", newElement);\n        }\n    }\n    getField(field)\n    {\n        //returns the react elements to render the list of the given field\n        var fieldList;\n        switch(field)\n        {\n            case \"admin\":\n                fieldList = this.props.fields.adminField;\n                break;\n            case \"issue\":\n                fieldList = this.props.fields.issueField;\n                break;\n            case \"response\":\n                fieldList = this.props.fields.responseField;\n                break;\n            case \"program\":\n                fieldList = this.props.fields.programField;\n                break;\n            case \"user\":\n                fieldList = this.props.fields.userField;\n                break;\n            default:\n                console.log(\"unrecognized field name in getField\");\n                break;\n        }\n        \n        const fieldItems = fieldList.map((item) => <li key={item}>{item}</li>)\n         return fieldItems;\n    }\n    setSearch(field, event)\n    {\n        //sets the search value of the given field\n        if(field === \"all\")\n        {\n            window.document.getElementById(\"searchResponse\").click();\n\n        }\n        else if(field === \"response\")\n        {\n            this.props.firebase.doSearch({type:\"response\", substr:window.document.getElementById(\"resSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus);\n        }\n        \n    }\n    render(){\n        console.log(\"props of fieldBar: \", this.props);\n        return(\n            <div>\n                <div/>\n                <hr/>\n                <p>Admins</p>\n                <button id=\"addAdmin\" onClick={()=>{this.props.firebase.doAddAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);}}>Add an admin</button>\n                <button id=\"delAdmin\" onClick={()=>{this.props.firebase.doDeleteAdmin(\"test.AdminsEmail@gmail.com\", this.props.updateStatus);}}>Delete an admin</button>\n                <div/>\n                <hr/>\n                <p>Users</p>\n                <button id=\"addUser\" onClick={()=>{this.props.firebase.doAddUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);}}>Add an User</button>\n                <button id=\"delUser\" onClick={()=>{this.props.firebase.doDeleteUser(\"test.UserEmails@gmail.com\", this.props.updateStatus);}}>Delete an User</button>\n                <div/>\n                <hr/>\n                <p>Issues</p>\n                <button id=\"addIssue\" onClick={()=>{this.props.firebase.doAddIssue(\"test issue\", this.props.updateStatus);}}>Add an issue</button>\n                <button id=\"delIssue\" onClick={()=>{this.props.firebase.doDeleteIssue(\"test issue\", this.props.updateStatus);}}>Delete an issue</button>\n                <div/>\n                <hr/>\n                <p>Responses</p>\n                <input id=\"resSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"response\",event)}}></input>\n                <div />\n                <button id=\"addResponse\" onClick={()=>{this.props.firebase.doAddResponse(\"test response\", this.props.updateStatus);this.props.updateField(\"ADDRESPONSE\", \"test response\");}}>Add a response</button>\n                <button id=\"delResponse\" onClick={()=>{this.props.firebase.doDeleteResponse(\"test response\", this.props.updateStatus);this.props.updateField(\"DELETERESPONSE\", \"test response\");}}>Delete a response</button>\n                <button id=\"searchResponse\" onClick={()=>{this.props.firebase.doSearch({type:\"response\", substr:window.document.getElementById(\"resSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.props.updateStatus)}}>search responses</button>\n                <ul>\n                {this.getField(\"response\")}\n                </ul>\n                <div/>\n                <hr/>\n                <p>Programs</p>\n                <button id=\"addProgram\" onClick={()=>{this.props.firebase.doAddProgram(\"test program\", this.props.updateStatus);}}>Add a program</button>\n                <button id=\"delProgram\" onClick={()=>{this.props.firebase.doDeleteProgram(\"test program\", this.props.updateStatus);}}>Delete a program</button>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        fields: state.fieldReducer\n    }\n};\nconst mapDispatcherToProps = (dispatch) => {\n    return {\n        updateStatus: (newStatus) => {dispatch({type: \"UPDATESTATUS\", payload: newStatus})},\n        updateField: (updateType, element) => {\n            dispatch({type: updateType, payload: element});\n        },\n        clearList: (fieldName) => {dispatch({type: \"CLEARLIST\", payload: fieldName});}\n    }\n};\nexport default connect(mapStateToProps, mapDispatcherToProps)(Fields);"]},"metadata":{},"sourceType":"module"}