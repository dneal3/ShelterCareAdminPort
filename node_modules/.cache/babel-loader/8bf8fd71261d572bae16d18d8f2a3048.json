{"ast":null,"code":"var _jsxFileName = \"/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/home/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Logs from '../logs';\nimport Fields from '../fieldBar';\nimport { FirebaseContext } from '../firebase';\n\nclass Home extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userSignedIn: false,\n      user: \"\",\n      userName: \"\",\n      isAdmin: false\n    };\n  }\n\n  signOutUser() {\n    this.props.userSignOut();\n  }\n\n  render() {\n    var dbtables = undefined;\n    var logs = undefined;\n\n    if (this.props.user.isAdmin) {\n      dbtables = React.createElement(FirebaseContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, firebaseIn => React.createElement(Fields, {\n        firebase: firebaseIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }));\n      logs = React.createElement(Logs, {\n        user: this.props.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, logs, dbtables);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  //return object with key value pairs that this component can use\n  // localPropName: globalStateNameFromRedux\n  return {\n    user: state.userAuthReducer\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  //return object with key value pairs that this component can use\n  // localPropName: function that will call redux store dispatch\n  return {\n    userSignOut: () => {\n      dispatch({\n        type: \"SIGNOUT\"\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/dloyd/summer_sc/ShelterCareAdminPort/src/components/home/index.js"],"names":["React","connect","Logs","Fields","FirebaseContext","Home","Component","constructor","state","userSignedIn","user","userName","isAdmin","signOutUser","props","userSignOut","render","dbtables","undefined","logs","firebaseIn","mapStateToProps","userAuthReducer","mapDispatchToProps","dispatch","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,eAAT,QAAgC,aAAhC;;AAGA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAkC;AAC9BC,EAAAA,WAAW,GAAE;AACT;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE,KADL;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,OAAO,EAAE;AAJA,KAAb;AAMH;;AAEDC,EAAAA,WAAW,GAAE;AACT,SAAKC,KAAL,CAAWC,WAAX;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,QAAQ,GAAIC,SAAhB;AACA,QAAIC,IAAI,GAAGD,SAAX;;AAIA,QAAG,KAAKJ,KAAL,CAAWJ,IAAX,CAAgBE,OAAnB,EACA;AACIK,MAAAA,QAAQ,GACH,oBAAC,eAAD,CAAiB,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEOG,UAAU,IACV,oBAAC,MAAD;AAAQ,QAAA,QAAQ,EAAIA,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHP,CADL;AAOAD,MAAAA,IAAI,GAAG,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKL,KAAL,CAAWJ,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEH;;AAED,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKS,IADL,EAEKF,QAFL,CADJ;AAQH;;AA1C6B;;AA6ClC,MAAMI,eAAe,GAAIb,KAAD,IAAW;AAClC;AACA;AACA,SAAO;AACAE,IAAAA,IAAI,EAAEF,KAAK,CAACc;AADZ,GAAP;AAGA,CAND;;AAOA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACxC;AACA;AACA,SAAO;AACIT,IAAAA,WAAW,EAAE,MAAM;AAACS,MAAAA,QAAQ,CAAC;AACzBC,QAAAA,IAAI,EAAE;AADmB,OAAD,CAAR;AAGvB;AAJD,GAAP;AAMA,CATD;;AAWA,eAAexB,OAAO,CAACoB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Logs from '../logs';\nimport Fields from '../fieldBar';\nimport { FirebaseContext } from '../firebase';\n\n\nclass Home extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            userSignedIn: false,\n            user: \"\",\n            userName: \"\",\n            isAdmin: false\n        };\n    }\n\n    signOutUser(){\n        this.props.userSignOut();\n    }\n    \n    render(){\n        var dbtables  = undefined;\n        var logs = undefined;\n\n        \n        \n        if(this.props.user.isAdmin)\n        {\n            dbtables = \n                (<FirebaseContext.Consumer>\n                    {\n                        firebaseIn => \n                        <Fields firebase = {firebaseIn}/>\n                    }\n                </FirebaseContext.Consumer> );\n            logs = <Logs user={this.props.user} />\n\n        }\n        \n        return (\n            <div>\n                {logs}\n                {dbtables}\n            </div>\n\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: globalStateNameFromRedux\n\treturn {\n        user: state.userAuthReducer\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: function that will call redux store dispatch\n\treturn {\n            userSignOut: () => {dispatch({\n                type: \"SIGNOUT\"\n            });\n        }\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}