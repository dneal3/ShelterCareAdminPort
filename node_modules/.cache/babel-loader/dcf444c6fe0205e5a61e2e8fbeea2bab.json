{"ast":null,"code":"import _objectSpread from \"/Users/dloyd/summer_sc/shelter-care/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/dloyd/summer_sc/shelter-care/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/firebase';\nconst intialState = {\n  userSignedIn: false,\n  email: \"\",\n  userName: \"\"\n};\n\nconst userAuthReducer = (state = intialState, action) => {\n  //state takes in an intial state at program intialization, all other calls will have a state input\n  var newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"SIGNIN\":\n      newState.email = action.payload.email;\n      newState.userName = action.payload.userName;\n      newState.userSignedIn = true;\n      newState.isAdmin = action.payload.isAdmin;\n      break;\n\n    case \"SIGNOUT\":\n      newState.userSignedIn = false;\n      newState.isAdmin = false;\n      newState.email = \"\";\n      newState.userName = \"\";\n      break;\n\n    default:\n      console.log(\"error in userAuthReducer, unknown action type\");\n      break;\n  }\n\n  return newState;\n};\n\nconst fieldReducer = (state, action) => {\n  var newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"\":\n      break;\n\n    case \"\":\n      break;\n\n    default:\n      break;\n  }\n\n  return newState;\n};\n\nconst intialSearchState = {\n  queryResponse: \"\",\n  queryIssue: \"\",\n  queryUser: \"\",\n  queryAdmin: \"\",\n  queryProgram: \"\"\n};\n\nconst searchReducer = (state = intialSearchState, action) => {\n  var newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"NEWSEARCH_RESPONSE\":\n      newState.queryResponse = action.payload.query;\n      break;\n\n    case \"NEWSEARCH_ISSUE\":\n      newState.queryIssue = action.payload.query;\n      break;\n\n    case \"NEWSEARCH_USER\":\n      newState.queryUser = action.payload.query;\n      break;\n\n    case \"NEWSEARCH_ADMIN\":\n      newState.queryAdmin = action.payload.query;\n      break;\n\n    case \"NEWSEARCH_PROGRAM\":\n      newState.queryProgram = action.payload.query;\n      break;\n\n    case \"EMPTYALLSEARCHES\":\n      newState = {\n        queryResponse: \"\",\n        queryIssue: \"\",\n        queryUser: \"\",\n        queryAdmin: \"\",\n        queryProgram: \"\"\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return newState;\n};\n\nconst store = createStore(combineReducers({\n  userAuthReducer,\n  fieldReducer,\n  searchReducer\n}));\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}, React.createElement(FirebaseContext.Provider, {\n  value: new Firebase(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/dloyd/summer_sc/shelter-care/src/index.js"],"names":["React","ReactDOM","createStore","combineReducers","applyMiddleware","logger","Provider","App","serviceWorker","Firebase","FirebaseContext","intialState","userSignedIn","email","userName","userAuthReducer","state","action","newState","type","payload","isAdmin","console","log","fieldReducer","intialSearchState","queryResponse","queryIssue","queryUser","queryAdmin","queryProgram","searchReducer","query","store","subscribe","getState","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport logger from \"redux-logger\"\nimport {Provider} from \"react-redux\"\n\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/firebase';\n\nconst intialState = {userSignedIn: false,\n    email: \"\",\n    userName: \"\"};\nconst userAuthReducer = (state=intialState, action) => {\n    //state takes in an intial state at program intialization, all other calls will have a state input\n    var newState = {...state};\n\n    switch(action.type)\n    {\n        case \"SIGNIN\":\n            newState.email = action.payload.email;\n            newState.userName = action.payload.userName;\n            newState.userSignedIn = true;\n            newState.isAdmin = action.payload.isAdmin;\n            break;\n        case \"SIGNOUT\":\n            newState.userSignedIn = false;\n            newState.isAdmin = false;\n            newState.email = \"\";\n            newState.userName = \"\";\n            break;\n        default:\n            console.log(\"error in userAuthReducer, unknown action type\");\n            break;\n    }\n    return newState;\n};\nconst fieldReducer = (state, action) => {\n    var newState = {...state};\n\n    switch(action.type)\n    {\n        case \"\":\n            \n            break;\n        case \"\":\n            \n            break;\n        default:\n            break;\n    }\n    return newState;\n};\nconst intialSearchState = {queryResponse: \"\",\n                            queryIssue:\"\",\n                            queryUser:\"\",\n                            queryAdmin: \"\",\n                            queryProgram: \"\"\n                            };\nconst searchReducer = (state=intialSearchState, action) => {\n    var newState = {...state};\n\n    switch(action.type)\n    {\n        case \"NEWSEARCH_RESPONSE\":\n            newState.queryResponse = action.payload.query;\n            break;\n        case \"NEWSEARCH_ISSUE\":\n            newState.queryIssue = action.payload.query;\n            break;\n        case \"NEWSEARCH_USER\":\n            newState.queryUser = action.payload.query;\n            break;\n        case \"NEWSEARCH_ADMIN\":\n            newState.queryAdmin = action.payload.query;\n            break;\n        case \"NEWSEARCH_PROGRAM\":\n                newState.queryProgram = action.payload.query;\n                break;\n        case \"EMPTYALLSEARCHES\":\n            newState = {queryResponse: \"\",\n                            queryIssue:\"\",\n                            queryUser:\"\",\n                            queryAdmin: \"\",\n                            queryProgram: \"\"\n                        };\n            break;\n        default:\n            break;\n    }\n    return newState;\n};\nconst store = createStore(combineReducers({userAuthReducer, fieldReducer, searchReducer}));\nstore.subscribe(()=>{console.log(store.getState())});\n\nReactDOM.render(\n    <Provider store={store}>\n        <FirebaseContext.Provider value={new Firebase()}>\n            <App />\n        </FirebaseContext.Provider>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}