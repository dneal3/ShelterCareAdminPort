{"ast":null,"code":"import _objectSpread from \"/Users/dloyd/summer_sc/shelter-care/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/dloyd/summer_sc/shelter-care/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, { FirebaseContext } from './components/firebase';\nconst initialState = {\n  userSignedIn: false,\n  email: \"\",\n  userName: \"\"\n};\n\nconst userAuthReducer = (state = initialState, action) => {\n  //state takes in an intial state at program intialization, all other calls will have a state input\n  var newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"SIGNIN\":\n      newState.email = action.payload.email;\n      newState.userName = action.payload.userName;\n      newState.userSignedIn = true;\n      newState.isAdmin = action.payload.isAdmin;\n      break;\n\n    case \"SIGNOUT\":\n      newState.userSignedIn = false;\n      newState.isAdmin = false;\n      newState.email = \"\";\n      newState.userName = \"\";\n      break;\n\n    default:\n      console.log(\"error in userAuthReducer, unknown action type\");\n      break;\n  }\n\n  return newState;\n};\n\nconst initialFieldState = {\n  responseField: [],\n  issueField: [],\n  userField: [],\n  adminField: [],\n  programField: [],\n  status: \"no action taken\"\n};\n\nconst fieldReducer = (state = initialFieldState, action) => {\n  var newState = _objectSpread({}, state);\n\n  var length;\n\n  switch (action.type) {\n    case \"UPDATESTATUS\":\n      newState.status = action.payload;\n      break;\n\n    case \"ADDADMIN\":\n      var admins = state.adminField;\n      admins.push(action.payload);\n      newState.adminField = admins;\n      break;\n\n    case \"DELETEADMIN\":\n      var admins = state.adminField;\n      var i = 0;\n      length = admins.length;\n\n      for (i; i < length; i++) {\n        if (admins[i] === action.payload) {\n          break;\n        }\n      }\n\n      admins.splice(i, 1);\n      newState.adminField = admins;\n      break;\n\n    case \"ADDISSUE\":\n      var issues = state.issueField;\n      issues.push(action.payload);\n      newState.issueField = issues;\n      break;\n\n    case \"DELETEISSUE\":\n      var issues = state.issueField;\n      var i = 0;\n      length = issues.length;\n\n      for (i; i < length; i++) {\n        if (issues[i] === action.payload) {\n          break;\n        }\n      }\n\n      issues.splice(i, 1);\n      newState.issueField = issues;\n      break;\n\n    case \"ADDRESPONSE\":\n      var response = state.responsesField;\n      responses.push(action.payload);\n      newState.responseField = responses;\n      break;\n\n    case \"DELETERESPONSE\":\n      var responses = state.responseField;\n      var i = 0;\n      length = responses.length;\n\n      for (i; i < length; i++) {\n        if (responses[i] === action.payload) {\n          break;\n        }\n      }\n\n      responses.splice(i, 1);\n      newState.responseField = responses;\n      break;\n\n    default:\n      break;\n  }\n\n  return newState;\n};\n\nconst initialSearchState = {\n  responseQuery: \"\",\n  issueQuery: \"\",\n  userQuery: \"\",\n  adminQuery: \"\",\n  programQuery: \"\"\n};\n\nconst searchReducer = (state = initialSearchState, action) => {\n  var newState = _objectSpread({}, state);\n\n  switch (action.type) {\n    case \"NEWSEARCH_RESPONSE\":\n      newState.responseQuery = action.payload;\n      break;\n\n    case \"NEWSEARCH_ISSUE\":\n      newState.issueQuery = action.payload;\n      break;\n\n    case \"NEWSEARCH_USER\":\n      newState.userQuery = action.payload;\n      break;\n\n    case \"NEWSEARCH_ADMIN\":\n      newState.adminQuery = action.payload;\n      break;\n\n    case \"NEWSEARCH_PROGRAM\":\n      newState.programQuery = action.payload;\n      break;\n\n    case \"CLEARALLSEARCHES\":\n      newState = {\n        responseQuery: \"\",\n        issueQuery: \"\",\n        userQuery: \"\",\n        adminQuery: \"\",\n        programQuery: \"\"\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return newState;\n};\n\nconst store = createStore(combineReducers({\n  userAuthReducer,\n  fieldReducer,\n  searchReducer\n}));\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n}, React.createElement(FirebaseContext.Provider, {\n  value: new Firebase(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 152\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 153\n  },\n  __self: this\n}))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/dloyd/summer_sc/shelter-care/src/index.js"],"names":["React","ReactDOM","createStore","combineReducers","logger","Provider","thunk","App","serviceWorker","Firebase","FirebaseContext","initialState","userSignedIn","email","userName","userAuthReducer","state","action","newState","type","payload","isAdmin","console","log","initialFieldState","responseField","issueField","userField","adminField","programField","status","fieldReducer","length","admins","push","i","splice","issues","response","responsesField","responses","initialSearchState","responseQuery","issueQuery","userQuery","adminQuery","programQuery","searchReducer","store","subscribe","getState","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, combineReducers} from \"redux\";\nimport logger from \"redux-logger\"\nimport {Provider} from \"react-redux\"\nimport thunk from 'redux-thunk';\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/firebase';\n\nconst initialState = {userSignedIn: false,\n    email: \"\",\n    userName: \"\"};\nconst userAuthReducer = (state=initialState, action) => {\n    //state takes in an intial state at program intialization, all other calls will have a state input\n    var newState = {...state};\n\n    switch(action.type)\n    {\n        case \"SIGNIN\":\n            newState.email = action.payload.email;\n            newState.userName = action.payload.userName;\n            newState.userSignedIn = true;\n            newState.isAdmin = action.payload.isAdmin;\n            break;\n        case \"SIGNOUT\":\n            newState.userSignedIn = false;\n            newState.isAdmin = false;\n            newState.email = \"\";\n            newState.userName = \"\";\n            break;\n        default:\n            console.log(\"error in userAuthReducer, unknown action type\");\n            break;\n    }\n    return newState;\n};\nconst initialFieldState = {responseField: [],\n                            issueField: [],\n                            userField: [],\n                            adminField: [],\n                            programField: [],\n                            status: \"no action taken\"\n                            };\nconst fieldReducer = (state=initialFieldState, action) => {\n    var newState = {...state};\n    var length;\n    switch(action.type)\n    {\n        case \"UPDATESTATUS\":\n            newState.status = action.payload;\n            break;\n        case \"ADDADMIN\":\n            var admins = state.adminField;\n            admins.push(action.payload);\n            newState.adminField = admins;\n            break;\n        case \"DELETEADMIN\":\n            var admins = state.adminField;\n            var i = 0;\n            length = admins.length;\n            for(i; i<length; i++)\n            {\n                if(admins[i] === action.payload){break;}\n            }\n            admins.splice(i, 1);\n            newState.adminField = admins;\n            break;\n        case \"ADDISSUE\":\n            var issues = state.issueField;\n            issues.push(action.payload);\n            newState.issueField = issues;\n            break;\n        case \"DELETEISSUE\":\n            var issues = state.issueField;\n            var i = 0;\n            length = issues.length;\n            for(i; i<length; i++)\n            {\n                if(issues[i] === action.payload){break;}\n            }\n            issues.splice(i, 1);\n            newState.issueField = issues;\n            break;\n        case \"ADDRESPONSE\":\n            var response = state.responsesField;\n            responses.push(action.payload);\n            newState.responseField = responses;\n            break;\n        case \"DELETERESPONSE\":\n            var responses = state.responseField;\n            var i = 0;\n            length = responses.length;\n            for(i; i<length; i++)\n            {\n               if(responses[i] === action.payload){break;}\n            }\n            responses.splice(i, 1);\n            newState.responseField = responses;\n            break;\n        \n        default:\n            break;\n    }\n    return newState;\n};\nconst initialSearchState = {responseQuery: \"\",\n                            issueQuery:\"\",\n                            userQuery:\"\",\n                            adminQuery: \"\",\n                            programQuery: \"\"\n                            };\nconst searchReducer = (state=initialSearchState, action) => {\n    var newState = {...state};\n\n    switch(action.type)\n    {\n        case \"NEWSEARCH_RESPONSE\":\n            newState.responseQuery = action.payload;\n            break;\n        case \"NEWSEARCH_ISSUE\":\n            newState.issueQuery = action.payload;\n            break;\n        case \"NEWSEARCH_USER\":\n            newState.userQuery = action.payload;\n            break;\n        case \"NEWSEARCH_ADMIN\":\n            newState.adminQuery = action.payload;\n            break;\n        case \"NEWSEARCH_PROGRAM\":\n                newState.programQuery = action.payload;\n                break;\n        case \"CLEARALLSEARCHES\":\n            newState = {responseQuery: \"\",\n            issueQuery:\"\",\n            userQuery:\"\",\n            adminQuery: \"\",\n            programQuery: \"\"\n            };\n            break;\n        default:\n            break;\n    }\n    return newState;\n};\nconst store = createStore(combineReducers({userAuthReducer, fieldReducer, searchReducer}));\nstore.subscribe(()=>{console.log(store.getState())});\n\nReactDOM.render(\n    <Provider store={store}>\n        <FirebaseContext.Provider value={new Firebase()}>\n            <App />\n        </FirebaseContext.Provider>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}