{"version":3,"sources":["components/navigation/index.js","components/firebase/context.js","components/firebase/app.js","components/firebase/index.js","components/signIn/index.js","components/signOut/index.js","components/admin/index.js","components/account/index.js","components/home/index.js","components/app/index.js","serviceWorker.js","index.js"],"names":["Navigation","react_default","a","createElement","react_router_dom","to","FirebaseContext","React","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","parseString","inStr","replace","doAddHelper","refs","db","firebase","database","ref","parsedStr","adding","query","type","child","once","then","snapshot","exists","updates","update","statusFunc","catch","error","alert","doDeleteHelper","deleting","confirmStr","window","confirm","remove","Firebase","Object","classCallCheck","this","initializeApp","console","log","cleanUpFunc","auth","currentUser","provider","GoogleAuthProvider","signInWithPopup","result","toFind","func","email","signOut","findAdmin","user","name","displayName","code","inObj","statusBind","path","updateListBind","forEach","secondSnap","subString","substr","toLowerCase","key","includes","adminToAdd","adminToDel","userToAdd","userToDel","responseToAdd","responseToDel","issueToAdd","issueToDel","programToAdd","programToDel","signInFunc","SignIn","_this","possibleConstructorReturn","getPrototypeOf","call","setTimeout","props","checkStatus","signInBind","_this2","timeout","id","onClick","doSignIn","Component","SignOut","doSignOut","signOutBind","Admin","state","statusStr","responseList","responseQuery","init","bind","assertThisInitialized","setSearch","newStatus","setState","newElement","newList","arguments","length","undefined","push","field","map","item","event","document","getElementById","click","context","Consumer","doAddAdmin","setStatus","doDeleteAdmin","doAddUser","doDeleteUser","doAddIssue","doDeleteIssue","placeholder","onChange","doAddResponse","doDeleteResponse","doSearch","value","updateList","getField","doAddProgram","doDeleteProgram","Account","userName","userEmail","Home","userSignedIn","isAdmin","newUser","adminStatus","adminPage","accountPage","account","admin","signIn","signInUser","signOutUser","App","navigation","react_router","component","Boolean","location","hostname","match","ReactDOM","render","Provider","components_app","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b5d9417d.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst LANDING = '/';\nconst SIGN_IN = '/signin';\nconst HOME = '/home';\nconst ADMIN = '/admin';\n\nconst Navigation = () => (\n    <div>\n        <ul>\n            <li>\n                <Link to={SIGN_IN}>Sign In</Link>\n            </li>\n            <li>\n                <Link to={LANDING}>Landing</Link>\n            </li>\n            <li>\n                <Link to={HOME}>Home</Link>\n            </li>\n        </ul>\n    </div>\n);\n\nexport default Navigation;","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","// Initialize Firebase \nimport firebase from 'firebase/app'; \nimport 'firebase/auth';\nimport 'firebase/database';\n  const config = {\n    apiKey: \"AIzaSyDWT1HRjJ-p0jH5pjQPtWLSVuZ2xxyWIDU\",\n    authDomain: \"hfac-sc.firebaseapp.com\",\n    databaseURL: \"https://hfac-sc.firebaseio.com\",\n    projectId: \"hfac-sc\",\n    storageBucket: \"hfac-sc.appspot.com\",\n    messagingSenderId: \"432119133740\"\n  };\n  function parseString(inStr)\n  {\n    var ret = inStr.replace(/\\./g, \"\");\n    var ret = ret.replace(/#/g, \"\");\n    var ret = ret.replace(/\\$/g, \"\");\n    var ret = ret.replace(/\\[/g, \"\");\n    var ret = ret.replace(/\\]/g, \"\");\n    return ret;\n    \n  }\n  function findAdmin(toFind, func)\n    {\n      // function that finds user in the database, returning an object isAdmin\n      // isAdmin is a bool that states if this account is a verified admin able to view the page\n      var db = firebase.database().ref();\n      const query = '/admins/'+parseString(toFind.email);\n      console.log(\"database query: \"+query);\n\n      db.child(query).once('value').then(function(snapshot) {\n        if(snapshot.exists())\n        {\n          func(toFind, true);\n        }\n        else\n        {\n          alert(\"Signed in email is not an admin, contact system admin if this is incorrect\");\n          firebase.auth().signOut();  \n        }\n      });\n      return ;\n    }\n    function doAddHelper(refs)\n    {\n      //Attemps to add an object to the database\n      //recieves an object with attributes type, adding, statusFunc, then adds these to the\n      //    database to the corresponding values\n      var db = firebase.database().ref();\n      const parsedStr = parseString(refs.adding);\n      const query = '/'+refs.type+'s/'+parsedStr;\n\n      db.child(query).once('value').then(function(snapshot) {\n        if(snapshot.exists())\n        {\n          refs.statusFunc(\"Failed to add \"+ refs.type+\" \" + refs.adding +\"\\n REASON: \"+ refs.type+\" already exists in database\");\n        }\n        else\n        {\n          var updates = {};\n          updates[query] = true;\n          db.update(updates);\n          refs.statusFunc(\"Successfully added \"+ refs.type+\" \" + refs.adding);\n          return ;\n        }\n      })\n      .catch(function(error) {\n        alert(\"An error occurred: \", error);\n        refs.statusFunc(\"Failed to add \"+ refs.type+\" \" + refs.adding + \" REASON: \" +error);\n      });\n    }\n    function doDeleteHelper(refs)\n    {\n      //Attemps to delete an user to the database\n      var db = firebase.database().ref();\n      const parsedStr = parseString(refs.deleting);\n      const query = '/'+refs.type+'s/'+parsedStr;\n\n      db.child(query).once('value').then(function(snapshot) {\n        if(snapshot.exists())\n        {\n          var confirmStr = \"are you sure you want to delete the \"+refs.type+ \" \"+ refs.deleting + \"?\";\n          if(window.confirm(confirmStr))\n          {\n            db.child(query).remove();\n            refs.statusFunc(\"Successfully deleted \"+refs.type+ \" \"+ refs.deleting);\n          }\n          else\n          {\n            refs.statusFunc(\"Deletion of \"+refs.type+ \" \"+ refs.deleting +\" aborted by user\");\n          }\n          return ;\n        }\n        else\n        {\n          alert(\"This \"+refs.type+ \" does not exist in the database\");\n          refs.statusFunc(refs.type+ \" \" + refs.deleting +\" does not exist in database\");\n        }\n      })\n      .catch(function(error) {\n        alert(\"An error occurred: \", error);\n        refs.statusFunc(\"Failed to delete \"+refs.type+ \" \"+ refs.deleting+\"/n REASON: \" +error);\n      });\n    }\n  \n  class Firebase{\n    constructor(){\n      firebase.initializeApp(config);\n      console.log(\"firebase intialized\");\n    }\n    doSignIn(cleanUpFunc) {\n      //signs in user if a user is not signed in already\n      var a = firebase.auth();\n      if(a.currentUser == null)\n      {\n        console.log(\"signing in\");\n        var provider = new firebase.auth.GoogleAuthProvider();\n        var user = a.signInWithPopup(provider);\n\n        user.then(function(result)\n        {\n          findAdmin({email:result.user.email, name:result.user.displayName}, cleanUpFunc)\n        })\n        //error code that warns user of potential mishaps\n        .catch(function(error)\n        {\n         var errorCode = error.code;\n         if (errorCode === \"auth/popup-closed-by-user\")\n          {\n            console.log(\"Sign in window closed by user before finalizing authentication\");\n          }\n          else\n          {\n            alert(error);\n          }\n        });\n      }\n      else\n      {\n        console.log(\"user already signed in\");\n      }\n    }\n    doSignOut(cleanUpFunc){\n      var a = firebase.auth();\n      if(a.currentUser != null)\n      {\n        a.signOut();\n        cleanUpFunc();\n        console.log(\"signed out\");\n      }\n    }\n    doSearch(inObj, statusBind)\n    // searches the database for inObj.type value for all items that contain .substr\n    //    when a match is found, inObj.updateListBind(match) is called\n    // Sets the status log by calling statusBind\n    {\n      var db = firebase.database().ref();\n      var path = \"/\"+parseString(inObj.type)+\"s/\";\n      console.log(\"searching objects at \" + path);\n      db.child(path).once('value').then(function(snapshot){\n        if(!snapshot.exists())\n        {\n          statusBind(\"Could not search \" + inObj.type + \"s as they do not exist in the database\");\n          return ;\n        }\n        inObj.updateListBind(\"\", true);\n        snapshot.forEach(function(secondSnap){\n          const subString = inObj.substr.toLowerCase();\n          const entry = (\"\" + secondSnap.key).toLowerCase();\n          if(entry.includes(subString))\n          {\n            inObj.updateListBind(secondSnap.key);\n          }\n        });\n        \n      });\n    }\n    doAddAdmin(adminToAdd, statusBind)\n    {\n      //Attemps to add an admin to the database\n      var obj = {\n        type: \"admin\",\n        adding: adminToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteAdmin(adminToDel, statusBind)\n    {\n      //Attemps to delete an admin to the database\n      var obj = {\n        type: \"admin\",\n        deleting: adminToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    doAddUser(userToAdd, statusBind)\n    {\n      var obj = {\n        type: \"user\",\n        adding: userToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteUser(userToDel, statusBind)\n    {\n      var obj = {\n        type: \"user\",\n        deleting: userToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    doAddResponse(responseToAdd, statusBind)\n    {\n      var obj = {\n        type: \"response\",\n        adding: responseToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteResponse(responseToDel, statusBind)\n    {\n      var obj = {\n        type: \"response\",\n        deleting: responseToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    doAddIssue(issueToAdd, statusBind)\n    {\n      var obj = {\n        type: \"issue\",\n        adding: issueToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteIssue(issueToDel, statusBind)\n    {\n      var obj = {\n        type: \"issue\",\n        deleting: issueToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    doAddProgram(programToAdd, statusBind)\n    {\n      var obj = {\n        type: \"program\",\n        adding: programToAdd,\n        statusFunc: statusBind\n      };\n      doAddHelper(obj);\n    }\n    doDeleteProgram(programToDel, statusBind)\n    {\n      var obj = {\n        type: \"program\",\n        deleting: programToDel,\n        statusFunc: statusBind\n      };\n      doDeleteHelper(obj);\n    }\n    checkStatus(signInFunc){\n      var a = firebase.auth();\n      if(a.currentUser != null)\n      {\n        console.log(\"CheckStatus says: user signed in\");\n        signInFunc({email: a.currentUser.email, name:a.currentUser.displayName},true)\n      }\n      else\n      {\n        console.log(\"CheckStatus says: no user signed in\");\n      }\n    }\n    test()\n    {\n      console.log(\"working\");\n    }\n  }\n\n  export default Firebase;\n","import FirebaseContext from './context';\nimport Firebase from './app';\n\nexport default Firebase;\n\nexport { FirebaseContext };","import React from 'react';\nimport { timeout } from 'q';\n\nclass SignIn extends React.Component{\n    constructor()\n    {\n        super();\n        setTimeout(() =>{this.props.firebase.checkStatus(this.props.signInBind)}, 650);\n    }\n    render(){\n        timeout();\n        return(\n            <div>\n                <button id=\"signIn\" onClick={() => {this.props.firebase.doSignIn(this.props.signInBind)}}>Sign in!</button>\n            </div>\n        );\n    }\n}\nexport default SignIn;","import React from 'react';\n\nclass SignOut extends React.Component{\n    render(){\n        return(\n            <button id=\"signOutButton\" onClick={()=>{this.props.firebase.doSignOut(this.props.signOutBind)}}>Sign Out</button>\n        );\n    }\n}\nexport default SignOut;","import React from 'react';\nimport {FirebaseContext} from '../firebase';\n\nclass Admin extends React.Component\n{\n    constructor()\n    {\n        super();\n        this.state = {\n            statusStr: \"Status: no action yet taken\",\n            responseList: [],\n            responseQuery: \"\"\n        };\n        setTimeout(this.init.bind(this), 200);\n    }\n    init()\n    {\n        this.setSearch(\"all\");\n    }\n    setStatus(newStatus)\n    {\n        this.setState({statusStr: \"Status: \"+newStatus});\n    }\n    updateList(newElement, clearList=false)\n    {\n        //updates the list, clearing it instead if clearList = true\n        var newList;\n        if(clearList)\n        {\n            newList = []\n        }\n        else\n        {\n            newList = this.state.responseList;\n            newList.push(newElement);\n\n        }\n        this.setState({responseList: newList});\n    }\n    getField(field)\n    {\n        //returns the react elements to render the list of the given field\n        const fieldList = this.state.responseList;\n        const fieldItems = fieldList.map((item) => <li key={item}>{item}</li>)\n         return fieldItems;\n    }\n    setSearch(field, event)\n    {\n        //sets the search value of the given field\n        if(field === \"all\")\n        {\n            window.document.getElementById(\"searchResponse\").click();\n\n        }\n        else if(field === \"response\")\n        {\n            //var newQuery = event.target.value;\n           // this.setState({responseQuery: newQuery});\n            window.document.getElementById(\"searchResponse\").click();\n        }\n        \n    }\n    render(){\n        return(\n            \n        <div>\n            <div>\n                <p>\n                   Page only for admins to see\n                </p>\n                <p id=\"statusInformer\">{this.state.statusStr}</p>\n            </div>\n\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addAdmin\" onClick={()=>{firebase.doAddAdmin(\"test.AdminsEmail@gmail.com\", this.setStatus.bind(this));}}>Add an admin</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delAdmin\" onClick={()=>{firebase.doDeleteAdmin(\"test.AdminsEmail@gmail.com\", this.setStatus.bind(this))}}>Delete an admin</button>\n                }\n            </FirebaseContext.Consumer>\n            <div></div>\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addUser\" onClick={()=>{firebase.doAddUser(\"test.UserEmails@gmail.com\", this.setStatus.bind(this));}}>Add an User</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delUser\" onClick={()=>{firebase.doDeleteUser(\"test.UserEmails@gmail.com\", this.setStatus.bind(this))}}>Delete an User</button>\n                }\n            </FirebaseContext.Consumer>\n            <div></div>\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addIssue\" onClick={()=>{firebase.doAddIssue(\"test issue\", this.setStatus.bind(this));}}>Add an issue</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delIssue\" onClick={()=>{firebase.doDeleteIssue(\"test issue\", this.setStatus.bind(this))}}>Delete an issue</button>\n                }\n            </FirebaseContext.Consumer>\n            <div></div>\n            <hr/>\n            <p>Responses</p>\n            <input id=\"resSearchInput\"type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(\"response\",event)}}></input>\n            <div />\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addResponse\" onClick={()=>{firebase.doAddResponse(\"test response\", this.setStatus.bind(this));}}>Add a response</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delResponse\" onClick={()=>{firebase.doDeleteResponse(\"test response\", this.setStatus.bind(this))}}>Delete a response</button>\n                }\n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"searchResponse\" onClick={()=>{firebase.doSearch({type:\"response\", substr:window.document.getElementById(\"resSearchInput\").value, updateListBind: this.updateList.bind(this)}, this.setStatus.bind(this))}}>search responses</button>\n                }\n            </FirebaseContext.Consumer>\n            <ul>\n                {this.getField(\"responses\")}\n            </ul>\n            <div></div>\n            <FirebaseContext.Consumer>\n                {\n                    firebase =>\n                        <button id=\"addProgram\" onClick={()=>{firebase.doAddProgram(\"test program\", this.setStatus.bind(this));}}>Add a program</button>\n                }\n            \n            </FirebaseContext.Consumer>\n            <FirebaseContext.Consumer>\n                {\n                    firebase => \n                    <button id=\"delProgram\" onClick={()=>{firebase.doDeleteProgram(\"test program\", this.setStatus.bind(this))}}>Delete a program</button>\n                }\n            </FirebaseContext.Consumer>\n            </div>\n        );\n    }\n}\n\nexport default Admin;","import React from 'react';\n\nclass Account extends React.Component{\n    render()\n    {\n        return(\n            <div>\n                <div> \n                    page for any signed in user to see\n                    <div></div>\n                    Your name is {this.props.userName}\n                    <div></div>\n                    Your email is {this.props.userEmail}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Account;","import React from 'react';\nimport Firebase, { FirebaseContext } from '../firebase';\nimport SignIn from '../signIn';\nimport SignOut from '../signOut';\nimport Admin from '../admin';\nimport Account from '../account';\n\n\nclass Home extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            userSignedIn: false,\n            user: \"\",\n            userName: \"\",\n            isAdmin: false\n        };\n    }\n    signInUser(newUser, adminStatus){\n        this.setState({\n            userSignedIn: true,\n            user: newUser.email,\n            userName: newUser.name,\n            isAdmin: adminStatus\n        });\n    }\n    signOutUser(){\n        this.setState({\n            userSignedIn: false,\n            user: \"\",\n            userName: \"\",\n            isAdmin: false\n        });\n    }\n    render(){\n        var adminPage = \"\"\n        var accountPage = \"\"\n        if(this.state.userSignedIn)\n        {\n            accountPage = <Account userName = {this.state.userName} userEmail={this.state.user}></Account>\n        }\n        if(this.state.isAdmin)\n        {\n            adminPage = <Admin />\n        }\n        return (\n            <div>\n                <FirebaseContext.Consumer>\n                    {\n                        firebase => \n                            <SignIn firebase = {firebase} signInBind = {this.signInUser.bind(this)}/>\n                    \n                    }\n                </FirebaseContext.Consumer>\n                <FirebaseContext.Consumer>\n                    {\n                        firebase => \n                            <SignOut firebase = {firebase} signOutBind = {this.signOutUser.bind(this)}/>\n                    \n                    }\n                </FirebaseContext.Consumer>\n                {accountPage}\n                {adminPage}\n            </div>\n            \n        );\n    }\n}\n\nexport default Home;","import React from \"react\";\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport Navigation from '../navigation';\nimport Home from '../home';\nimport SignIn from '../signIn';\n\nconst LANDING = '/';\nconst SIGN_IN = '/signin';\nconst HOME = '/home';\nconst ADMIN = '/admin';\n\nconst App = () => (\n\t<div>\n\t\t<Router>\n\t\t\t<Navigation/>\n\t\t\t<Route path={LANDING} component={Home}></Route>\n\t\t\t<Route path={HOME} ></Route>\n\t\t\t\n\t\t</Router>\n\t\t<h1>App</h1>\n\t</div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/firebase';\n\nReactDOM.render(<FirebaseContext.Provider value={new Firebase()}><App /></FirebaseContext.Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}