{"version":3,"sources":["components/logs/index.js","constants/emptyMessages.js","components/dataTable/index.js","components/fieldBar/index.js","components/firebase/context.js","constants/config.js","components/firebase/app.js","components/firebase/index.js","components/home/index.js","components/signIn/index.js","components/app/index.js","serviceWorker.js","components/signOut/index.js","components/navigation/index.js","index.js"],"names":["Logs","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","id","className","user","userName","status","React","Component","connect","fieldReducer","dispatch","nada","emptyMsg","DatabaseTable","_React$Component","query","field","toLowerCase","field_upper","toUpperCase","elements","undefined","inputVal","setTimeout","init","bind","assertThisInitialized","inherits","createClass","key","value","setSearch","event","firebase","doSearch","type","substr","window","document","getElementById","updateListBind","updateList","updateStatus","length","_this2","toAdd","prompt","alert","includes","slice","doAddHelper","adding","statusFunc","updateField","_this3","input","_this4","els","map","item","i","button","onClick","doDeleteHelper","deleting","emptySearchAddButtonClick","placeholder","onChange","addButtonClick","addFiller","buildTable","Fields","newElement","arguments","clearList","fieldList","fields","adminField","issueField","responseField","programField","userField","addressField","dist_modules","allowMultiple","title","concat","dataTable","getField","newStatus","payload","updateType","element","fieldName","FirebaseContext","createContext","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","parseString","inStr","ret","replace","signingIn","local_addresses","local_responses","local_issues","local_program","local_admin","local_user","Firebase","initializeApp","console","log","toSearch","cleanUpFunc","auth","currentUser","checkStatus","provider","GoogleAuthProvider","signInWithPopup","then","result","toFind","func","db","database","ref","email","child","once","snapshot","exists","signOut","findAdmin","name","displayName","catch","error","code","inObj","statusBind","subString","getLocal","forEach","ending","path","secondSnap","entry","revertParse","push","refs","reduxBind","cache","parsedStr","updates","update","confirmStr","confirm","remove","index","indexOf","splice","adminToAdd","obj","adminToDel","userToAdd","userToDel","responseToAdd","responseToDel","issueToAdd","issueToDel","programToAdd","programToDel","signInFunc","Home","userSignedIn","isAdmin","userSignOut","dbtables","logs","context","Consumer","firebaseIn","fieldBar","components_logs","userAuthReducer","SignIn","userSignIn","doSignIn","newUser","adminStatus","App","signInComponent","signIn","toRender","home","userObj","Boolean","location","hostname","match","SignOut","doSignOut","signOutBind","Navbar","ss","docs","btn","rel","target","href","signOutUser","initialState","initialFieldState","freshen","listIn","pop","store","createStore","combineReducers","action","newState","objectSpread","newList","emptyList","toConsumableArray","sort","firedb","ReactDOM","render","es","Provider","navigation","components_app","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa478616.chunk.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\n\nclass Logs extends React.Component {\nconstructor(props) {\n    super(props);\n    this.state= {};\n}\n\n    render(){\n        return(     \n            <div id='logging'>\n                <div className='logging-tables'>\n                    <span> {'Hello ' + this.props.user.userName + '!'} </span> \n                </div>\n                <div className='logging-tables'>\n                    <span  id=\"statusInformer\"> {\"Status: \"+this.props.status} </span>\n                </div>\n            </div>           \n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: globalStateNameFromRedux\n\treturn {\n        status: state.fieldReducer.status\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n    //this function must exist to call connect, but we dont actually need it\n    \n\treturn {nada: (dispatch)=>{}\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logs);\n","export const emptyMsg = \"No elements matching your query were found, to add your query to this list press the add button.\";","import React from 'react';\nimport {emptyMsg} from '../../constants/emptyMessages';\n\n/*\n  class ExpandMinimizeButton extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        symbol: props.symbol\n      };\n    }\n  \n    onExOrMin(){\n      this.props.onClickFunction();\n      if(this.state.symbol === \"Expand\") {\n        this.setState({\n          symbol: \"Minimize\"\n        });\n      }\n      else {\n        this.setState({\n          symbol: \"Expand\"\n        })\n      }\n    }\n  \n    render () {\n      return (\n        <button className='btn btn-info btn-sm' onClick={() => this.onExOrMin()}> {this.state.symbol} </button>\n      );\n    }\n  \n  }\n  */\n\n  export class DatabaseTable extends React.Component {\n    constructor(props){\n      super(props);\n      this.query = props.query;\n      this.field = (this.props.query).toLowerCase();\n      this.field_upper = (this.props.query).toUpperCase();\n      this.elements = undefined;\n      this.state = {\n        inputVal: \"\",\n        elements: [] //this is a list of all the elements gotten from the database in fetch information\n      };\n      setTimeout(this.init.bind(this), 200);\n    }\n    init()\n    {\n        this.setSearch(this.field);\n    }\n    setSearch(field, event)\n    {\n        this.props.firebase.doSearch({type:this.field, substr:window.document.getElementById(this.field+\"SearchInput\").value, updateListBind: this.props.updateList}, this.props.updateStatus);\n    }\n    \n    addFiller()\n    {\n      if(this.props.elements.length === 0)\n      {\n        this.props.updateList(emptyMsg, this.field);\n      }\n    }\n    addButtonClick()\n    {\n      var toAdd = prompt(\"Enter a new \" + this.field);\n      if(toAdd == null){\n        return null;\n      }\n      if(toAdd === \"\")\n      {\n        alert('Cannot add empty queries to the database');\n        this.props.updateStatus(\"Cannot add an empty field to the database\");\n        return ;\n      }\n      if (this.query === 'User' || this.query=== 'Admin' ){\n        if(!toAdd.includes(\"@sheltercare.org\") && !toAdd.includes(\"@\")){\n          toAdd = toAdd + \"@sheltercare.org\";\n        }\n        if (toAdd.slice(toAdd.length-16, toAdd.length) !== '@sheltercare.org'){\n          alert('Emails added must have ending @sheltercare.org');\n          this.props.updateStatus('Emails added must have ending @sheltercare.org');\n          return ;\n        }\n      }\n      this.props.firebase.doAddHelper({type: this.field, adding: toAdd, statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"ADD\"+this.field_upper, toAdd);});\n      setTimeout( ()=>{\n        this.props.firebase.doSearch({type:this.field, substr: \"\", updateListBind: this.props.updateList}, this.props.updateStatus);\n      },180);\n    }\n    emptySearchAddButtonClick()\n    {\n      const input = window.document.getElementById(this.field+\"SearchInput\");\n      var toAdd = input.value;\n      if(toAdd === \"\")\n      {\n        alert('Cannot add empty queries to the database');\n        this.props.updateStatus(\"Cannot add an empty string to the database\");\n        return ;\n      }\n      if (this.query === 'User' || this.query=== 'Admin' ){\n        if(!toAdd.includes(\"@sheltercare.org\") && !toAdd.includes(\"@\")){\n          toAdd = toAdd + \"@sheltercare.org\";\n        }\n        if (toAdd.slice(toAdd.length-16, toAdd.length) !== '@sheltercare.org'){\n          alert('Emails added must have ending @sheltercare.org');\n          this.props.updateStatus('Emails added must have ending @sheltercare.org');\n          return ;\n        }\n      }\n      this.props.firebase.doAddHelper({type: this.field, adding: toAdd, statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"ADD\"+this.field_upper, toAdd);});\n      input.value = \"\";\n      setTimeout( ()=>{\n        this.props.firebase.doSearch({type:this.field, substr: \"\", updateListBind: this.props.updateList}, this.props.updateStatus);\n      },180);\n    }\n    buildTable()\n    {\n      var els = this.props.elements.map( (item, i) => {\n        var button = \"\";\n        if(item !== emptyMsg)\n        {\n          button = <button id='rem-btn' className='btn btn-danger btn-sm' onClick={() => {this.props.firebase.doDeleteHelper({type: this.field, deleting: item, statusFunc: this.props.updateStatus}, () => {this.props.updateField(\"DELETE\"+this.field_upper, item);})}}>-</button>  \n        }\n        else \n        {\n          button = <button id='addnew-btn' className='btn btn-success btn-sm' onClick={()=>{\n              this.emptySearchAddButtonClick();\n            }\n          }>Add</button> \n        }\n        return (\n          <tr key={i}>\n            <td key={i}> {item} </td>\n            <td id='add-btn-td'>{button}</td>\n          </tr>\n        );} \n        ) \n  \n      return (\n        <div className='tables'>\n          <table className='table'>\n            <thead>\n              <tr>\n                <td>\n                  <input className='form-control' id={this.field+\"SearchInput\"} type=\"text\" placeholder=\"search\" onChange={(event)=>{this.setSearch(this.field,event)}}></input>\n                </td>\n                <td id='add-btn-td'>\n                  <button id='add-btn' className='btn btn-success btn-sm' onClick={()=>{\n                      this.addButtonClick();\n                    }\n                    }>+</button> \n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {els}\n              \n            </tbody>\n          </table>\n          \n        </div>\n      )\n    }\n  \n    render () {\n      //console.log(this.props.elements);\n      setTimeout(this.addFiller.bind(this), 1);\n      //this.addFiller();\n      return (\n        this.buildTable()\n      );\n    }\n  }\n  \nexport default DatabaseTable;","import React from 'react';\nimport {connect} from 'react-redux';\nimport DatabaseTable from '../dataTable';\nimport { Accordion, AccordionItem } from 'react-sanfona';\n\n\nclass Fields extends React.Component\n{\n    \n    updateList(newElement, type, clearList=false)\n    {\n        //updates the list, clearing it instead if clearList = true\n        //TODO: change to make dynamic\n        if(clearList)\n        {\n            this.props.clearList(type);\n        }\n        else\n        {\n            this.props.updateField(\"ADD\"+type.toUpperCase(), newElement);\n        }\n    }\n    getField(field)\n    {\n        //returns the react elements to render the list of the given field\n        var fieldList;\n        switch(field)\n        {\n            \n            case \"admin\":\n                fieldList = this.props.fields.adminField;\n                break;\n            case \"issue\":\n                fieldList = this.props.fields.issueField;\n                break;\n            case \"response\":\n                fieldList = this.props.fields.responseField;\n                break;\n            case \"program\":\n                fieldList = this.props.fields.programField;\n                break;\n            case \"user\":\n                fieldList = this.props.fields.userField;\n                break;\n            case \"address\":\n                //TODO are we supporting addresses?\n                fieldList = this.props.fields.addressField;\n                break;\n            default:\n              //  console.log('unrecognized field ' + field + ' name in getField');\n                fieldList = []; // avoid crash by iterating over nothing\n                break;\n        }      \n        return fieldList;\n    }\n    \n    render(){\n       // console.log(this.props.fields);\n        return(\n            <div>\n                <Accordion allowMultiple className='container-fluid'>\n        {['User', 'Admin', 'Program', 'Issue', 'Response', 'Address'].map(item => {\n          return (\n            <AccordionItem key = {item+\"-accordian\"} title={`${item} List`}>\n              <DatabaseTable updateList = {this.updateList.bind(this)} query={item} firebase={this.props.firebase} updateStatus={this.props.updateStatus} updateField={this.props.updateField} elements={this.getField(item.toLowerCase())}/>\n            </AccordionItem>\n\n          );\n        })}\n      </Accordion>\n        </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        fields: state.fieldReducer\n    }\n};\nconst mapDispatcherToProps = (dispatch) => {\n    return {\n        updateStatus: (newStatus) => {dispatch({type: \"UPDATESTATUS\", payload: newStatus})},\n        updateField: (updateType, element) => {\n            dispatch({type: updateType, payload: element});\n        },\n        clearList: (fieldName) => {dispatch({type: \"CLEARLIST\", payload: fieldName});}\n    }\n};\nexport default connect(mapStateToProps, mapDispatcherToProps)(Fields);","import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport default FirebaseContext;","export const config = {\n    apiKey: \"AIzaSyDWT1HRjJ-p0jH5pjQPtWLSVuZ2xxyWIDU\",\n    authDomain: \"hfac-sc.firebaseapp.com\",\n    databaseURL: \"https://hfac-sc.firebaseio.com\",\n    projectId: \"hfac-sc\",\n    storageBucket: \"hfac-sc.appspot.com\",\n    messagingSenderId: \"432119133740\"\n  };","// Initialize Firebase \nimport firebase from 'firebase/app'; \nimport 'firebase/auth';\nimport 'firebase/database';\nimport {config} from '../../constants/config';\n  function parseString(inStr)\n  {\n    var ret = inStr.replace(/\\./g, \"+\");\n    ret = ret.replace(/#/g, \"<\");\n    ret = ret.replace(/\\$/g, \">\");\n    ret = ret.replace(/\\[/g, \"&\");\n    ret = ret.replace(/\\]/g, \"=\");\n    ret = ret.replace(/\\//g, \"_\");\n\n    return ret; \n  }\n  function revertParse(inStr)\n  {\n    var ret = inStr.replace(/\\+/g, \".\");\n    ret = ret.replace(/</g, \"#\");\n    ret = ret.replace(/>/g, \"$\");\n    ret = ret.replace(/&/g, \"[\");\n    ret = ret.replace(/=/g, \"]\");\n    ret = ret.replace(/_/g, \"/\");\n\n    return ret;\n  }\n  function findAdmin(toFind, func)\n    {\n      // function that finds user in the database, returning an object isAdmin\n      // isAdmin is a bool that states if this account is a verified admin able to view the page\n      var db = firebase.database().ref();\n      const query = '/admins/'+parseString(toFind.email);\n\n      db.child(query).once('value').then(function(snapshot) {\n        if(snapshot.exists())\n        {\n          func(toFind, true);\n        }\n        else\n        {\n          alert(\"Signed in email is not an admin, contact system admin if this is incorrect\");\n          firebase.auth().signOut();  \n        }\n      });\n      return ;\n    }\n    \n  var signingIn = false; // ensure only one pop up exists at a time\n  var local_addresses = [];\n  var local_responses = [];\n  var local_issues = [];\n  var local_program = [];\n  var local_admin = [];\n  var local_user = [];\n\n\n  class Firebase{\n    constructor(){\n      firebase.initializeApp(config);\n      console.log(\"firebase intialized\");\n    }\n    getLocal(type){\n      var toSearch;\n      if(type === \"address\"){\n        toSearch = local_addresses;\n      }\n      else if(type === \"response\"){\n        toSearch = local_responses;\n      }\n      else if(type === \"issue\"){\n        toSearch = local_issues;\n      }\n      else if(type === \"program\"){\n        toSearch = local_program;\n      }\n      else if(type === \"admin\"){\n        toSearch = local_admin;\n      }\n      else if(type === \"user\"){\n        toSearch = local_user;\n      }\n      return toSearch;\n    }\n    doSignIn(cleanUpFunc) {\n      //signs in user if a user is not signed in already\n      var a = firebase.auth();\n      if(a.currentUser == null && !signingIn)\n      {\n        console.log(\"signing in\");\n        signingIn = true;   //close to other pop ups\n        var provider = new firebase.auth.GoogleAuthProvider();\n        var user = a.signInWithPopup(provider);\n\n        user.then(function(result)\n        {\n          findAdmin({email:result.user.email, name:result.user.displayName}, cleanUpFunc);\n          signingIn = false;  //open to other pop ups\n        })\n        //error code that warns user of potential mishaps\n        .catch(function(error)\n        {\n         var errorCode = error.code;\n         if (errorCode === \"auth/popup-closed-by-user\")\n          {\n            console.log(\"Sign in window closed by user before finalizing authentication\");\n          }\n          else\n          {\n            alert(error);\n          }\n          signingIn = false;  //open to other pop ups\n        });\n      }\n      else\n      {\n        console.log(\"user already signed in\");\n        this.checkStatus(cleanUpFunc);\n      }\n    }\n    doSignOut(cleanUpFunc){\n      var a = firebase.auth();\n      if(a.currentUser != null)\n      {\n        a.signOut();\n        cleanUpFunc();\n        console.log(\"signed out\");\n      }\n    }\n    doSearch(inObj, statusBind)\n    // searches the database for inObj.type value for all items that contain .substr\n    //    when a match is found, inObj.updateListBind(match) is called\n    // Sets the status log by calling statusBind\n    {\n      const subString = inObj.substr.toLowerCase();\n      inObj.updateListBind(\"\", inObj.type, true);\n      var toSearch = this.getLocal(inObj.type);\n      if(toSearch.length > 0){\n        toSearch.forEach(\n          (item)=>{\n            if(item.toLowerCase().includes(subString)){\n              inObj.updateListBind(item, inObj.type);\n            }\n          }\n        );\n        return ;\n      }\n\n      var db = firebase.database().ref();\n      const ending = inObj.type === \"address\" ? \"es/\" : \"s/\";\n      var path = \"/\"+parseString(inObj.type)+ending;\n      db.child(path).once('value').then(function(snapshot){\n        if(!snapshot.exists())\n        {\n          //statusBind(\"Could not search \" + inObj.type + \"s as they do not exist in the database\");\n          return ;\n        }\n        snapshot.forEach(function(secondSnap){\n          \n          const entry = revertParse(\"\" + secondSnap.key);\n          const lowered = entry.toLowerCase();\n          if(lowered.includes(subString))\n          {\n            inObj.updateListBind(entry, inObj.type);\n          }\n          toSearch.push(entry);\n          \n        });\n        \n      });\n    }\n    doAddHelper(refs, reduxBind = () => {})\n    {\n      //Attemps to add an object to the database\n      //recieves an object with attributes type, adding, statusFunc, then adds these to the\n      //    database to the corresponding values\n\n      var cache = this.getLocal(refs.type);\n      \n      var db = firebase.database().ref();\n      const ending = refs.type === \"address\" ? \"es/\" : \"s/\";\n      const parsedStr = parseString(refs.adding);\n      const query = '/'+refs.type+ending+parsedStr;\n\n      db.child(query).once('value').then(function(snapshot) {\n        if(snapshot.exists())\n        {\n          refs.statusFunc(refs.type+\" already exists in database\");\n        }\n        else\n        {\n          if(!cache.includes(refs.adding))\n          {\n            cache.push(refs.adding);\n          }\n\n          var updates = {};\n          updates[query] = true;\n          db.update(updates);\n          reduxBind();\n          refs.statusFunc(\"Successfully added \"+ refs.type+\" \" + refs.adding);\n          return ;\n        }\n      })\n      .catch(function(error) {\n        alert(\"An error occurred: \", error);\n        refs.statusFunc(\"Failed to add \"+ refs.type+\" \" + refs.adding + \" REASON: \" +error);\n      });\n    }\n    doDeleteHelper(refs, reduxBind = () => {})\n    {\n      //Attemps to delete an user to the database\n      var cache = this.getLocal(refs.type);\n      \n      var db = firebase.database().ref();\n      const ending = refs.type === \"address\" ? \"es/\" : \"s/\";\n      const parsedStr = parseString(refs.deleting);\n      const query = '/'+refs.type+ending+parsedStr;\n      console.log(\"deleting from: \", query);\n      db.child(query).once('value').then(function(snapshot) {\n        if(snapshot.exists())\n        {\n          var confirmStr = \"are you sure you want to delete the \"+refs.type+ \" \"+ refs.deleting + \"?\";\n          if(window.confirm(confirmStr))\n          {\n            db.child(query).remove();\n            if(cache.includes(refs.deleting))\n            {\n              var index = cache.indexOf(refs.deleting);\n              cache.splice(index, 1);\n            }\n            reduxBind();\n            refs.statusFunc(\"Successfully deleted \"+refs.type+ \" \"+ refs.deleting);\n          }\n          else\n          {\n            refs.statusFunc(\"Deletion of \"+refs.type+ \" \"+ refs.deleting +\" aborted by user\");\n          }\n          return ;\n        }\n        else\n        {\n          alert(\"This \"+refs.type+ \" does not exist in the database\");\n          refs.statusFunc(refs.type+ \" \" + refs.deleting +\" does not exist in database\");\n        }\n      })\n      .catch(function(error) {\n        alert(\"An error occurred: \", error);\n        refs.statusFunc(\"Failed to delete \"+refs.type+ \" \"+ refs.deleting+\"/n REASON: \" +error);\n      });\n    }\n    doAddAdmin(adminToAdd, statusBind)\n    {\n      //Attemps to add an admin to the database\n      var obj = {\n        type: \"admin\",\n        adding: adminToAdd,\n        statusFunc: statusBind\n      };\n      this.doAddHelper(obj);\n    }\n    doDeleteAdmin(adminToDel, statusBind)\n    {\n      //Attemps to delete an admin to the database\n      var obj = {\n        type: \"admin\",\n        deleting: adminToDel,\n        statusFunc: statusBind\n      };\n      this.doDeleteHelper(obj);\n    }\n    doAddUser(userToAdd, statusBind)\n    {\n      var obj = {\n        type: \"user\",\n        adding: userToAdd,\n        statusFunc: statusBind\n      };\n      this.doAddHelper(obj);\n    }\n    doDeleteUser(userToDel, statusBind)\n    {\n      var obj = {\n        type: \"user\",\n        deleting: userToDel,\n        statusFunc: statusBind\n      };\n      this.doDeleteHelper(obj);\n    }\n    doAddResponse(responseToAdd, statusBind)\n    {\n      var obj = {\n        type: \"response\",\n        adding: responseToAdd,\n        statusFunc: statusBind\n      };\n      this.doAddHelper(obj);\n    }\n    doDeleteResponse(responseToDel, statusBind)\n    {\n      var obj = {\n        type: \"response\",\n        deleting: responseToDel,\n        statusFunc: statusBind\n      };\n      this.doDeleteHelper(obj);\n    }\n    doAddIssue(issueToAdd, statusBind)\n    {\n      var obj = {\n        type: \"issue\",\n        adding: issueToAdd,\n        statusFunc: statusBind\n      };\n      this.doAddHelper(obj);\n    }\n    doDeleteIssue(issueToDel, statusBind)\n    {\n      var obj = {\n        type: \"issue\",\n        deleting: issueToDel,\n        statusFunc: statusBind\n      };\n      this.doDeleteHelper(obj);\n    }\n    doAddProgram(programToAdd, statusBind)\n    {\n      var obj = {\n        type: \"program\",\n        adding: programToAdd,\n        statusFunc: statusBind\n      };\n      this.doAddHelper(obj);\n    }\n    doDeleteProgram(programToDel, statusBind)\n    {\n      var obj = {\n        type: \"program\",\n        deleting: programToDel,\n        statusFunc: statusBind\n      };\n      this.doDeleteHelper(obj);\n    }\n    checkStatus(signInFunc){\n      var a = firebase.auth();\n      if(a.currentUser != null)\n      {\n        console.log(\"CheckStatus says: user signed in\");\n        signInFunc({email: a.currentUser.email, name:a.currentUser.displayName},true)\n      }\n      else\n      {\n        console.log(\"CheckStatus says: no user signed in\");\n      }\n    }\n    test()\n    {\n      console.log(\"working\");\n    }\n  }\n\n  export default Firebase;","import FirebaseContext from './context';\nimport Firebase from './app';\n\nexport default Firebase;\n\nexport { FirebaseContext };","import React from 'react';\nimport { connect } from 'react-redux';\nimport Logs from '../logs';\nimport Fields from '../fieldBar';\nimport { FirebaseContext } from '../firebase';\n\n\nclass Home extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            userSignedIn: false,\n            user: \"\",\n            userName: \"\",\n            isAdmin: false\n        };\n    }\n\n    signOutUser(){\n        this.props.userSignOut();\n    }\n    \n    render(){\n        var dbtables  = undefined;\n        var logs = undefined;\n\n        \n        \n        if(this.props.user.isAdmin)\n        {\n            dbtables = \n                (<FirebaseContext.Consumer>\n                    {\n                        firebaseIn => \n                        <Fields firebase = {firebaseIn}/>\n                    }\n                </FirebaseContext.Consumer> );\n            logs = <Logs user={this.props.user} />\n\n        }\n        \n        return (\n            <div>\n                {logs}\n                {dbtables}\n            </div>\n\n        );\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: globalStateNameFromRedux\n\treturn {\n        user: state.userAuthReducer\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: function that will call redux store dispatch\n\treturn {\n            userSignOut: () => {dispatch({\n                type: \"SIGNOUT\"\n            });\n        }\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport {connect} from 'react-redux';\nimport \"../../index.css\";\n\nclass SignIn extends React.Component{\n    constructor()\n    {\n        super();\n        setTimeout(() =>{this.props.firebase.checkStatus(this.props.userSignIn)}, 650);\n    }\n    render(){\n        return(\n            <div className=\"signIn\">\n                <table className=\"signIn-table\">\n                    <tbody>\n                    <tr>\n                        <td>\n                        {\"If you are a ShelterCare admin, sign in by clicking the button below\"}\n                        </td>\n                    </tr>\n                    <tr>\n                        <td id='signin-row'>\n                            <button className=\"btn btn-success btn-md\"  id=\"signIn-button\" onClick={() => \n                                {\n                                    this.props.firebase.doSignIn(this.props.userSignIn)\n                                }}>Sign in!</button>   \n                        </td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: globalStateNameFromRedux\n\treturn {\n        user: state.userAuthReducer\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: function that will call redux store dispatch\n\treturn {\n            userSignIn: (newUser, adminStatus) => {dispatch({\n                type: \"SIGNIN\",\n                payload: {email: newUser.email, userName: newUser.name, isAdmin:adminStatus}\n            })}\n        };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React from \"react\";\nimport {connect } from 'react-redux';\nimport Home from '../home';\nimport SignIn from '../signIn';\nimport { FirebaseContext } from '../firebase';\nimport '../../index.css';\n\nclass App extends React.Component\n{\n\tconstructor()\n\t{\n\t\tsuper();\n\t\tthis.signInComponent = <FirebaseContext.Consumer>\n\t\t{\n\t\t\tfirebase => \n\t\t\t\t<SignIn firebase = {firebase} />\n\t\t\n\t\t}\n\t</FirebaseContext.Consumer>;\n\t\tthis.toRender = this.signInComponent;\n\t}\n\trender(){\n\t\tif (this.props.auth.userSignedIn)\n\t\t{\n\t\t\tthis.toRender = <Home  />;\n\t\t}\n\t\telse \n\t\t{\n\t\t\tthis.toRender = this.signInComponent;\n\t\t}\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t{this.toRender}\n\t\t\t</div>\n\t\t);\n\t}\n\t\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.userAuthReducer \n    }\n};\nconst mapDispatcherToProps = (dispatch) => {\n    return {\n        userSignIn: (userObj) => {dispatch({\n\t\t\ttype: \"SIGNIN\",\n\t\t\tpayload: userObj})},\n    }\n};\nexport default connect(mapStateToProps, mapDispatcherToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n\nclass SignOut extends React.Component{\n    render(){\n        return(\n            <button className=\"btn btn-danger btn-md\" id=\"signOutButton\" onClick={()=>{this.props.firebase.doSignOut(this.props.signOutBind)}}>Sign Out</button>\n        );\n    }\n}\nexport default SignOut;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { FirebaseContext } from '../firebase';\nimport SignOut from '../signOut';\n\n\n\nclass Navbar extends React.Component {\n\n  signOutUser(){\n    this.props.userSignOut();\n  }\n\n  render() {\n    // should try to add ico next to the sheltercare brand item\n    var ss='';\n    var docs='';\n    var btn = '';\n    if(this.props.user.isAdmin) {\n        ss = (\n            <li className=\"nav-item\">\n                <a className=\"nav-link\" rel=\"noopener noreferrer\" target='_blank' href=\"https://docs.google.com/spreadsheets/d/1jKAy71Lb1o-dv_rnNvMlrQNqV6dxBx_UYAbNgz2Ptlk/edit?ts=5d40ce16#gid=0\"> Encounter Spreadsheet </a>\n            </li>\n        );\n\n        // docs link not real yet\n        docs = (<li className=\"nav-item\">\n                <a className='nav-link' rel=\"noopener noreferrer\" target='_blank' href=\"/AdminGuide.pdf\"> Admin Guide </a>\n            </li>\n            );\n    }\n\n    if(this.props.user.userSignedIn) {\n        btn = (<FirebaseContext.Consumer>\n        {\n            firebase => \n                <SignOut className='btn my-2 my-sm-0' id='signOutButton' firebase = {firebase} signOutBind = {this.signOutUser.bind(this)}/>\n        \n        }\n        </FirebaseContext.Consumer>);\n\n    }\n\n    return (\n        <nav id='navbar-style' className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <span id='comp-name' className='navbar-brand mb-0 h1'> ShelterCare Admin Portal </span>\n            <div className=\"collapse navbar-collapse\">\n                <ul className=\"navbar-nav mr-auto\">\n                    {ss}\n                    {docs}\n                </ul>\n            </div> \n            {btn}\n            \n    </nav>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: globalStateNameFromRedux\n\treturn {\n        user: state.userAuthReducer\n\t};\n};\nconst mapDispatchToProps = (dispatch) => {\n\t//return object with key value pairs that this component can use\n\t// localPropName: function that will call redux store dispatch\n\treturn {\n            userSignOut: () => {dispatch({\n                type: \"SIGNOUT\"\n            });\n        }\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, combineReducers} from \"redux\";\nimport {Provider} from \"react-redux\"\nimport './index.css';\nimport App from './components/app';\nimport * as serviceWorker from './serviceWorker';\nimport Firebase, {FirebaseContext} from './components/firebase';\nimport {emptyMsg} from './constants/emptyMessages';\nimport Navbar from './components/navigation';\n\nconst initialState = {userSignedIn: false,\n    email: \"\",\n    userName: \"\"};\nconst userAuthReducer = (state=initialState, action) => {\n    //state takes in an intial state at program intialization, all other calls will have a state input\n    var newState = {...state};\n\n    switch(action.type)\n    {\n        case \"SIGNIN\":\n            newState.email = action.payload.email;\n            newState.userName = action.payload.userName;\n            newState.userSignedIn = true;\n            newState.isAdmin = action.payload.isAdmin;\n            break;\n        case \"SIGNOUT\":\n            newState.userSignedIn = false;\n            newState.isAdmin = false;\n            newState.email = \"\";\n            newState.userName = \"\";\n            break;\n        default:\n            //console.log(\"error in userAuthReducer, unknown action type: \", action.type);\n            break;\n    }\n    return newState;\n};\nconst initialFieldState = {responseField: [],\n                            issueField: [],\n                            userField: [],\n                            adminField: [],\n                            programField: [],\n                            addressField: [],\n                            status: \"no action taken\"\n                            };\nfunction freshen(listIn)\n{\n    // removes no entries message from the list\n    if(listIn.length === 1 && listIn[0] === emptyMsg )\n    {\n        listIn.pop();\n    }\n}\nconst fieldReducer = (state=initialFieldState, action) => {\n    var newState = {...state};\n    var length, i;\n    var newList = [];\n    switch(action.type)\n    {\n        case \"UPDATESTATUS\":\n            newState.status = action.payload;\n            break;\n        case \"CLEARLIST\":\n            var emptyList = [];\n            switch (action.payload)\n            {\n                case \"all\":\n                    newState = initialFieldState;\n                    newState.status = state.status;\n                    break;\n                case \"admin\":\n                    newState.adminField = emptyList;\n                    break;\n                case \"address\":\n                    newState.addressField = emptyList;\n                    break;\n                case \"issue\":\n                    newState.issueField = emptyList;\n                    break;\n                case \"program\":\n                    newState.programField = emptyList;\n                    break;\n                case \"response\":\n                    newState.responseField = emptyList;\n                    break;\n                case \"user\":\n                    newState.userField = emptyList;\n                    break;\n                default:\n                    //console.log(\"unrecognized field name in reducer\");\n                    break;\n            }\n            break;\n        case \"ADDADMIN\":\n            newList = [...state.adminField];\n            freshen(newList);\n            newList.push(action.payload);\n            newList.sort();\n            newState.adminField = newList;\n            break;\n        case \"DELETEADMIN\":\n            newList = [...state.adminField];\n            i = 0;\n            length = newList.length;\n            for(i; i<length; i++)\n            {\n                if(newList[i] === action.payload){break;}\n            }\n            newList.splice(i, 1);\n            newState.adminField = newList;\n            break;\n        case \"ADDADDRESS\":\n            newList = [...state.addressField];\n            freshen(newList);\n            newList.push(action.payload);\n            newList.sort();\n            newState.addressField = newList;\n            break;\n        case \"DELETEADDRESS\":\n            newList = [...state.addressField];\n            i = 0;\n            length = newList.length;\n            for(i; i<length; i++)\n            {\n                if(newList[i] === action.payload){break;}\n            }\n            newList.splice(i, 1);\n            newState.addressField = newList;\n            break;\n        case \"ADDISSUE\":\n            newList = [...state.issueField];\n            freshen(newList);\n            newList.push(action.payload);\n            newList.sort();\n            newState.issueField = newList;\n            break;\n        case \"DELETEISSUE\":\n            newList = [...state.issueField];\n            i = 0;\n            length = newList.length;\n            for(i; i<length; i++)\n            {\n                if(newList[i] === action.payload){break;}\n            }\n            newList.splice(i, 1);\n            newState.issueField = newList;\n            break;\n        case \"ADDRESPONSE\":\n            newList = [...state.responseField];\n            freshen(newList);\n            newList.push(action.payload);\n            newList.sort();\n            newState.responseField = newList;\n            break;\n        case \"DELETERESPONSE\":\n            newList = [...state.responseField];\n            i = 0;\n            length = newList.length;\n            for(i; i<length; i++)\n            {\n               if(newList[i] === action.payload){break;}\n            }\n            newList.splice(i, 1);\n            newState.responseField = newList;\n            break;\n        case \"ADDPROGRAM\":\n            newList = [...state.programField];\n            freshen(newList);\n            newList.push(action.payload);\n            newList.sort();\n            newState.programField = newList;\n            break;\n        case \"DELETEPROGRAM\":\n            newList = [...state.programField];\n            i = 0;\n            length = newList.length;\n            for(i; i<length; i++)\n            {\n                if(newList[i] === action.payload){break;}\n            }\n            newList.splice(i, 1);\n            newState.programField = newList;\n            break;\n        case \"ADDUSER\":\n            newList = [...state.userField];\n            freshen(newList);\n\n            newList.push(action.payload);\n            newList.sort();\n            newState.userField = newList;\n            break;\n        case \"DELETEUSER\":\n            newList = [...state.userField];\n            i = 0;\n            length = newList.length;\n            for(i; i<length; i++)\n            {\n                if(newList[i] === action.payload){break;}\n            }\n            newList.splice(i, 1);\n            newState.userField = newList;\n            break;\n        default:\n            break;\n    }\n    return newState;\n};\n\n\nconst store = createStore(combineReducers({userAuthReducer, fieldReducer}));\n//store.subscribe(()=>{console.log(store.getState())});\n\nconst firedb = new Firebase();\n\n\nReactDOM.render(\n        <Provider store={store}>\n                <FirebaseContext.Provider value={firedb}>\n                    <Navbar />\n                </FirebaseContext.Provider>\n        </Provider>, document.getElementById(\"navbar-container\"));\n\nReactDOM.render(\n    <Provider store={store}>\n        <FirebaseContext.Provider value={firedb}>\n            <App />\n        </FirebaseContext.Provider>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}